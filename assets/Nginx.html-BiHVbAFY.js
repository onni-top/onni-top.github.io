import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,c as r,b as n,e,w as i,a as d,o,d as l}from"./app-DxgGpIM1.js";const c={},h={class:"table-of-contents"};function u(g,s){const a=p("router-link");return o(),r("div",null,[s[16]||(s[16]=n("h1",{id:"nginx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx"},[n("span",null,"Nginx")])],-1)),n("nav",h,[n("ul",null,[n("li",null,[e(a,{to:"#flag"},{default:i(()=>s[0]||(s[0]=[l("Flag")])),_:1})]),n("li",null,[e(a,{to:"#扩展模块插件"},{default:i(()=>s[1]||(s[1]=[l("扩展模块插件")])),_:1})]),n("li",null,[e(a,{to:"#编译安装"},{default:i(()=>s[2]||(s[2]=[l("编译安装")])),_:1})]),n("li",null,[e(a,{to:"#location"},{default:i(()=>s[3]||(s[3]=[l("location")])),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#语法规则"},{default:i(()=>s[4]||(s[4]=[l("语法规则")])),_:1})]),n("li",null,[e(a,{to:"#内部调用"},{default:i(()=>s[5]||(s[5]=[l("内部调用")])),_:1})]),n("li",null,[e(a,{to:"#以后缀设置过期时间"},{default:i(()=>s[6]||(s[6]=[l("以后缀设置过期时间")])),_:1})]),n("li",null,[e(a,{to:"#禁止访问某个目录"},{default:i(()=>s[7]||(s[7]=[l("禁止访问某个目录")])),_:1})])])]),n("li",null,[e(a,{to:"#rewrite语法"},{default:i(()=>s[8]||(s[8]=[l("rewrite语法")])),_:1})]),n("li",null,[e(a,{to:"#判断表达式"},{default:i(()=>s[9]||(s[9]=[l("判断表达式")])),_:1})]),n("li",null,[e(a,{to:"#全局变量"},{default:i(()=>s[10]||(s[10]=[l("全局变量")])),_:1})]),n("li",null,[e(a,{to:"#判断user-agent"},{default:i(()=>s[11]||(s[11]=[l("判断user_agent")])),_:1})]),n("li",null,[e(a,{to:"#proxy-pass指令"},{default:i(()=>s[12]||(s[12]=[l("proxy_pass指令")])),_:1})]),n("li",null,[e(a,{to:"#日志切割"},{default:i(()=>s[13]||(s[13]=[l("日志切割")])),_:1})]),n("li",null,[e(a,{to:"#主配置"},{default:i(()=>s[14]||(s[14]=[l("主配置")])),_:1})]),n("li",null,[e(a,{to:"#动静分离配置"},{default:i(()=>s[15]||(s[15]=[l("动静分离配置")])),_:1})])])]),s[17]||(s[17]=d(`<h2 id="flag" tabindex="-1"><a class="header-anchor" href="#flag"><span>Flag</span></a></h2><ul><li><a href="https://github.com/nginx" target="_blank" rel="noopener noreferrer">https://github.com/nginx</a><ul><li><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener noreferrer">https://nginx.org/en/download.html</a></li><li><a href="http://nginx.org/en/docs" target="_blank" rel="noopener noreferrer">https://nginx.org/en/docs</a></li></ul></li><li><a href="https://github.com/nginxinc" target="_blank" rel="noopener noreferrer">https://github.com/nginxinc</a></li><li><a href="https://github.com/h5bp/server-configs-nginx" target="_blank" rel="noopener noreferrer">https://github.com/h5bp/server-configs-nginx</a></li><li><a href="https://github.com/digitalocean/nginxconfig.io" target="_blank" rel="noopener noreferrer">https://github.com/digitalocean/nginxconfig.io</a><ul><li><a href="https://www.digitalocean.com/community/tools/nginx" target="_blank" rel="noopener noreferrer">https://www.digitalocean.com/community/tools/nginx</a></li></ul></li><li><a href="https://github.com/alibaba/tengine" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/tengine</a></li></ul><ul><li><a href="https://github.com/hfpp2012/nginx-tutorial" target="_blank" rel="noopener noreferrer">https://github.com/hfpp2012/nginx-tutorial</a></li><li>Nginx 入门指南 <a href="https://github.com/xuexb/learn-nginx" target="_blank" rel="noopener noreferrer">https://github.com/xuexb/learn-nginx</a></li><li><a href="https://iziyang.github.io/tags/nginx" target="_blank" rel="noopener noreferrer">标签: Nginx | 原少子杨</a></li><li><a href="https://my.oschina.net/jsan/blog/125861" target="_blank" rel="noopener noreferrer">Nginx HTTP核心模块指令和内置变量中文说明</a></li><li><a href="https://blog.csdn.net/u014296316/article/details/80973530" target="_blank" rel="noopener noreferrer">nginx 变量使用</a></li><li><a href="https://juejin.im/post/5ea931866fb9a043815146fb" target="_blank" rel="noopener noreferrer">Nginx 从入门到实践，万字详解</a></li><li><a href="https://segmentfault.com/blog/siguoya-nginx" target="_blank" rel="noopener noreferrer">Nginx从入门到实践</a></li><li><a href="https://www.cnblogs.com/zjfjava/p/10947264.html" target="_blank" rel="noopener noreferrer">Nginx流控</a></li><li><a href="https://segmentfault.com/a/1190000037788252" target="_blank" rel="noopener noreferrer">Nginx 高性能优化配置实战总结</a></li><li><a href="https://zhuanlan.zhihu.com/p/149946545" target="_blank" rel="noopener noreferrer">nginx 优化的六点方法</a></li><li><a href="https://juejin.cn/post/6844904122068680711" target="_blank" rel="noopener noreferrer">Nginx-性能优化</a></li><li><a href="https://jayshao.com/cloudflare-nginx-ssl" target="_blank" rel="noopener noreferrer">博客使用Cloudflare和Nginx的相关配置</a></li><li><a href="https://blog.csdn.net/weixin_44623055/article/details/124715177" target="_blank" rel="noopener noreferrer">Nginx——Nginx负载均衡</a></li><li><a href="https://blog.csdn.net/liji133122/article/details/126667277" target="_blank" rel="noopener noreferrer">Nginx--流量限制（最有用的功能之一）</a></li></ul><ul><li>开发工具包 <a href="https://github.com/vision5/ngx_devel_kit" target="_blank" rel="noopener noreferrer">https://github.com/vision5/ngx_devel_kit</a></li><li><a href="https://github.com/topics/nginx-configuration" target="_blank" rel="noopener noreferrer">https://github.com/topics/nginx-configuration</a></li><li><a href="https://github.com/NginxProxyManager/nginx-proxy-manager" target="_blank" rel="noopener noreferrer">https://github.com/NginxProxyManager/nginx-proxy-manager</a></li><li>配置生成 <a href="https://github.com/0xB4LINT/nginxconfig.io" target="_blank" rel="noopener noreferrer">https://github.com/0xB4LINT/nginxconfig.io</a></li><li>配置格式化 <a href="https://github.com/vasilevich/nginxbeautifier" target="_blank" rel="noopener noreferrer">https://github.com/vasilevich/nginxbeautifier</a></li><li><a href="https://github.com/1connect/nginx-config-formatter" target="_blank" rel="noopener noreferrer">https://github.com/slomkowski/nginx-config-formatter</a></li><li><a href="https://github.com/nginx-proxy/nginx-proxy" target="_blank" rel="noopener noreferrer">https://github.com/nginx-proxy/nginx-proxy</a></li><li><a href="https://github.com/evertramos/nginx-proxy-automation" target="_blank" rel="noopener noreferrer">https://github.com/evertramos/nginx-proxy-automation</a></li><li><a href="https://github.com/onlyGuo/nginx-gui" target="_blank" rel="noopener noreferrer">https://github.com/onlyGuo/nginx-gui</a></li><li>文件服务器 <a href="https://github.com/Naereen/Nginx-Fancyindex-Theme" target="_blank" rel="noopener noreferrer">https://github.com/Naereen/Nginx-Fancyindex-Theme</a></li><li><a href="https://github.com/aperezdc/ngx-fancyindex" target="_blank" rel="noopener noreferrer">https://github.com/aperezdc/ngx-fancyindex</a></li><li>监控请求 <a href="https://github.com/lebinh/ngxtop" target="_blank" rel="noopener noreferrer">https://github.com/lebinh/ngxtop</a></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nignx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 快速关闭，可能不保存相关信息，并迅速终止web服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">kill</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> quit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PID</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 平稳关闭，保存相关信息，有安排的结束web服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> quit</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 重新打开日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reopen</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 重载配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 验证配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展模块插件" tabindex="-1"><a class="header-anchor" href="#扩展模块插件"><span>扩展模块插件</span></a></h2><ul><li><a href="https://www.nginx.com/resources/wiki/modules" target="_blank" rel="noopener noreferrer">https://www.nginx.com/resources/wiki/modules</a></li><li><a href="https://www.nginx.com/nginx-wiki/build/dirhtml/modules" target="_blank" rel="noopener noreferrer">https://www.nginx.com/nginx-wiki/build/dirhtml/modules</a></li><li><a href="https://github.com/search?q=nginx-module" target="_blank" rel="noopener noreferrer">https://github.com/search?q=nginx-module</a></li><li><a href="https://github.com/topics/nginx-module" target="_blank" rel="noopener noreferrer">https://github.com/topics/nginx-module</a></li></ul><ul><li>Lua多种扩展模块 <a href="https://github.com/openresty" target="_blank" rel="noopener noreferrer">https://github.com/openresty</a><ul><li><a href="https://openresty.org/cn" target="_blank" rel="noopener noreferrer">https://openresty.org/cn</a></li><li><a href="https://openresty-reference.readthedocs.io" target="_blank" rel="noopener noreferrer">https://openresty-reference.readthedocs.io</a></li><li><a href="https://honeypps.com/architect/introduction-of-openresty" target="_blank" rel="noopener noreferrer">OpenResty 概要及原理科普</a></li><li><a href="https://segmentfault.com/t/openresty" target="_blank" rel="noopener noreferrer">openresty 的动态 - SegmentFault 思否</a></li><li><a href="https://www.nginx.com/resources/wiki/modules/lua" target="_blank" rel="noopener noreferrer">https://www.nginx.com/resources/wiki/modules/lua</a></li><li><a href="https://github.com/moonbingbing/openresty-best-practices" target="_blank" rel="noopener noreferrer">https://github.com/moonbingbing/openresty-best-practices</a></li><li><a href="https://github.com/gityf/ngx_lua_thrift" target="_blank" rel="noopener noreferrer">https://github.com/gityf/ngx_lua_thrift</a></li><li><a href="https://zhuanlan.zhihu.com/p/67904411" target="_blank" rel="noopener noreferrer">浅谈OpenResty中的body_filter_by_lua*</a></li><li><a href="https://www.bilibili.com/read/cv5038242" target="_blank" rel="noopener noreferrer">ngx.re模块和lua正则匹配的区别</a><ul><li><a href="https://github.com/openresty/lua-nginx-module#ngxrematch" target="_blank" rel="noopener noreferrer">https://github.com/openresty/lua-nginx-module#ngxrematch</a></li></ul></li><li><a href="https://www.jianshu.com/p/5167325edb09" target="_blank" rel="noopener noreferrer">Openresty+lua实现动态upstream</a></li><li><a href="https://blog.csdn.net/force_eagle/article/details/51966333" target="_blank" rel="noopener noreferrer">NGINX 结合 lua 动态修改upstream</a></li></ul></li><li><a href="https://github.com/iresty/nginx-lua-module-zh-wiki" target="_blank" rel="noopener noreferrer">https://github.com/iresty/nginx-lua-module-zh-wiki</a></li><li><a href="https://github.com/loveshell/ngx_lua_waf" target="_blank" rel="noopener noreferrer">https://github.com/loveshell/ngx_lua_waf</a></li><li><a href="https://github.com/ledgetech/lua-resty-http" target="_blank" rel="noopener noreferrer">https://github.com/ledgetech/lua-resty-http</a></li><li><a href="https://github.com/3scale/cors-proxy" target="_blank" rel="noopener noreferrer">https://github.com/3scale/cors-proxy</a></li><li><a href="https://github.com/starjun/openstar" target="_blank" rel="noopener noreferrer">https://github.com/starjun/openstar</a></li><li><a href="https://github.com/zhouchangxun/ngx_healthcheck_module" target="_blank" rel="noopener noreferrer">https://github.com/zhouchangxun/ngx_healthcheck_module</a></li><li><a href="https://github.com/vozlt/nginx-module-vts" target="_blank" rel="noopener noreferrer">https://github.com/vozlt/nginx-module-vts</a></li><li><a href="https://gitee.com/tianhao26/openresty_forwarding_log" target="_blank" rel="noopener noreferrer">https://gitee.com/tianhao26/openresty_forwarding_log</a></li><li>心跳检测 <a href="https://github.com/yaoweibin/nginx_upstream_check_module" target="_blank" rel="noopener noreferrer">https://github.com/yaoweibin/nginx_upstream_check_module</a></li><li><a href="https://github.com/cuber/ngx_http_google_filter_module" target="_blank" rel="noopener noreferrer">https://github.com/cuber/ngx_http_google_filter_module</a><ul><li><a href="https://plusls.github.io/linux/nginx/configure-nginx-google-mirror" target="_blank" rel="noopener noreferrer">Nginx 配置谷歌镜像站</a></li></ul></li><li>流媒体 <a href="https://github.com/arut/nginx-rtmp-module" target="_blank" rel="noopener noreferrer">https://github.com/arut/nginx-rtmp-module</a></li></ul><h2 id="编译安装" tabindex="-1"><a class="header-anchor" href="#编译安装"><span>编译安装</span></a></h2><ul><li><a href="https://juejin.cn/post/6868289389722763272" target="_blank" rel="noopener noreferrer">Nginx 核心模块与配置实践</a></li></ul><p><strong>openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 查找一下libssl.so.1.1的位置，然后链接到/usr/lib64/libssl.so.1.1即可。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libssl.so.1.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/lib64/libssl.so.1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /usr/lib64/libssl.so.1.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/lib64/libcrypto.so.1.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /usr/lib64/libcrypto.so.1.1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>libssl.so.1.1: cannot open shared object file: No such file or directory</strong></p><blockquote><p>Centos7 默认提供的 openssl 版本是 1.0.2，报错是因为openssl 库的安装位置不正确或未安装 1.1 以上版本的问题</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#从官网下载，去掉文件名，直接访问链接获取最新的包链接</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># wget https://www.openssl.org/source/openssl-1.1.1k.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#腾讯云提供的镜像，去掉文件名，直接访问链接获取最新的包链接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.cloud.tencent.com/openssl/source/openssl-1.1.1k.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl-1.1.1k.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl-1.1.1k</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> autoconf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libtool</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shared</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --openssldir=/usr/local/openssl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix=/usr/local/openssl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>openssl version</code> 如果看到版本号还是低版本</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/usr/local/lib64/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/ld.so.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ldconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>还是有问题执行以下方式</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 备份</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/openssl.old</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/lib/openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/lib/openssl.old</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 创建软链接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/openssl/bin/openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/openssl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/openssl/include/openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/include/openssl</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 写配置</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/usr/local/openssl/lib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/ld.so.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ldconfig</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>location</span></a></h2><h3 id="语法规则" tabindex="-1"><a class="header-anchor" href="#语法规则"><span>语法规则</span></a></h3><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location [=|~|~*|^~] /uri/ {</span></span>
<span class="line"><span>        ····· </span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修饰符含义</li></ul><table><thead><tr><th>规则</th><th>说明</th></tr></thead><tbody><tr><td><code>!~*</code></td><td>不区分大小写，但不匹配的正则</td></tr><tr><td><code>!~</code></td><td>区分大小写，但不匹配的正则</td></tr><tr><td><code>/</code></td><td>通用匹配，任何请求都会匹配到</td></tr><tr><td><code>@</code></td><td>定义一个内部命名的匹配（<a href="https://blog.sometimesnaive.org/article/72" target="_blank" rel="noopener noreferrer">等阶于<code>internal</code></a>），适用于<code>error_page</code>,<code>try_files</code></td></tr><tr><td><code>^~</code></td><td>uri以某个常规字符串开头，如请求为<code>/static/20%/aa</code>，匹配规则<code>^~ /static/ /aa</code></td></tr><tr><td><code>~*</code></td><td>不区分大小写的正则匹配</td></tr><tr><td><code>~</code></td><td>区分大小写的正则匹配</td></tr><tr><td><code>=</code></td><td>精确匹配</td></tr></tbody></table><ul><li>当我们有多个<code>location</code>配置的情况下，其匹配顺序为</li></ul><ol><li>带有<code>=</code>的精确匹配优先</li><li>没有修饰符的精确匹配</li><li>正则表达式按照他们在配置文件中定义的顺序</li><li>带有<code>^~</code>修饰符的，开头匹配</li><li>带有<code>~</code>、<code>~*</code>修饰符的，如果正则表达式与<code>URI</code>匹配</li><li>没有修饰符的，如果指定字符串与<code>URI</code>开头匹配</li></ol><p><strong>示例</strong></p><ul><li><a href="https://mp.weixin.qq.com/s/eMXrIaTRpoyZdPsoF_tMCQ" target="_blank" rel="noopener noreferrer">nginx的root和alias详解</a></li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。</span></span>
<span class="line"><span># 这里是直接转发给后端应用服务器了，也可以是一个静态首页</span></span>
<span class="line"><span>location = / {</span></span>
<span class="line"><span>   #匹配http://localhost/</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location = /login {</span></span>
<span class="line"><span>   #匹配http://localhost/login</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 第二个必选规则是处理静态文件请求，这是 nginx 作为 http 服务器的强项</span></span>
<span class="line"><span># 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用</span></span>
<span class="line"><span>location ^~ /static/ {</span></span>
<span class="line"><span>   #匹配http://localhost/static/a.html，http://localhost/static/c.png</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location ~ \\.(gif|jpg|png|js|css)$ {</span></span>
<span class="line"><span>   #匹配http://localhost/a.gif, http://localhost/b.jpg</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location ~* \\.png$ {</span></span>
<span class="line"><span>   #http://localhost/a.PNG</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location !~ \\.xhtml$ {</span></span>
<span class="line"><span>   #匹配http://localhost/a.XHTML</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location !~* \\.xhtml$ {</span></span>
<span class="line"><span>   #匹配http://localhost/a.jsp</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 通用规则，用来转发动态请求到后端应用服务器</span></span>
<span class="line"><span># 非静态文件请求就默认是动态请求</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>   #匹配http://localhost/register，http://localhost/category/id/1111</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内部调用" tabindex="-1"><a class="header-anchor" href="#内部调用"><span>内部调用</span></a></h3><p><strong><code>internal</code></strong></p><blockquote><p><code>internal</code> 指令用于指定只允许来自本地 <code>Nginx</code> 的内部调用，来自外部的访问会直接返回 <code>404 not found</code> 状态。</p></blockquote><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 定义一个内部调用location</span></span>
<span class="line"><span>location /internal/ {</span></span>
<span class="line"><span>    internal;</span></span>
<span class="line"><span>    # https://nginx.org/en/docs/http/ngx_http_proxy_module.html</span></span>
<span class="line"><span>    proxy_pass http://192.168.1.110:8091;</span></span>
<span class="line"><span>    proxy_set_header Host $host;</span></span>
<span class="line"><span>    proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>    proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>    # 修改响应头中的&quot;Location&quot;和&quot;Refresh&quot;字段</span></span>
<span class="line"><span>    # 解决https-&gt;nginx-&gt;http-&gt;tomcat重定向问题</span></span>
<span class="line"><span>    proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$ https://$1$3;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 使用rewrite 内部重定向，其中 last 或 break 均可提供内部重定向。</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>    rewrite .* /internal/ last;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 利用 Openresty 的 ngx.exec 模块</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>    access_by_lua_block {</span></span>
<span class="line"><span>        return ngx.exec(&quot;/internal/&quot;)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>location @name</code></strong></p><blockquote><p>命名location中不能再嵌套其它的命名location。</p></blockquote><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 匹配静态文件</span></span>
<span class="line"><span>location ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {</span></span>
<span class="line"><span>    # 如果文件不存在</span></span>
<span class="line"><span>    #if (!-f $request_filename) {</span></span>
<span class="line"><span>        #content_by_lua_block {</span></span>
<span class="line"><span>                #ngx.exec(&quot;@pass&quot;);</span></span>
<span class="line"><span>        #}</span></span>
<span class="line"><span>    #}</span></span>
<span class="line"><span>    root /www/wwwroot/api;</span></span>
<span class="line"><span>    # 按顺序检查文件是否存在，返回第一个找到的文件。结尾的斜线表示为文件夹 -$uri/。</span></span>
<span class="line"><span>    # 如果所有的文件都找不到，会进行一个内部重定向到最后一个参数</span></span>
<span class="line"><span>    try_files $uri $uri/ @pass;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 通用匹配</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>    # 或者使用\`ngx.exec\`主要实现的是内部的重定向</span></span>
<span class="line"><span>    # \`ngx.redirect\`是外部重定向</span></span>
<span class="line"><span>    content_by_lua_block {</span></span>
<span class="line"><span>        ngx.exec(&quot;@pass&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location @pass {</span></span>
<span class="line"><span>    # https://nginx.org/en/docs/http/ngx_http_proxy_module.html</span></span>
<span class="line"><span>    proxy_pass http://192.168.1.110:8091;</span></span>
<span class="line"><span>    proxy_set_header Host $host;</span></span>
<span class="line"><span>    proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>    proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>    # 修改响应头中的&quot;Location&quot;和&quot;Refresh&quot;字段</span></span>
<span class="line"><span>    # 解决https-&gt;nginx-&gt;http-&gt;tomcat重定向问题</span></span>
<span class="line"><span>    proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$  https://$1$3;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="以后缀设置过期时间" tabindex="-1"><a class="header-anchor" href="#以后缀设置过期时间"><span>以后缀设置过期时间</span></a></h3><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location ~* \\.(js|css|jpg|jpeg|gif|png|swf)$ {</span></span>
<span class="line"><span>    if (-f $request_filename) {</span></span>
<span class="line"><span>        expires 1h;</span></span>
<span class="line"><span>        break;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="禁止访问某个目录" tabindex="-1"><a class="header-anchor" href="#禁止访问某个目录"><span>禁止访问某个目录</span></a></h3><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location ~* \\.(txt|doc)\${</span></span>
<span class="line"><span>    root /data/www/wwwroot/linuxtone/test;</span></span>
<span class="line"><span>    deny all;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rewrite语法" tabindex="-1"><a class="header-anchor" href="#rewrite语法"><span>rewrite语法</span></a></h2><ul><li><a href="https://blog.csdn.net/weixin_40792878/article/details/83316519" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_40792878/article/details/83316519</a></li></ul><blockquote><p>该指令通过正则表达式的使用来改变URI.可以同时存在一个或者多个指令，按照顺序一次对URL进行匹配和处理。</p></blockquote><blockquote><p>该指令可以在<code>server</code>块或者<code>location</code>块中配置</p></blockquote><ul><li>语法：<code>rewrite regex replacement [flag];</code><ul><li><code>rewrite</code>是实现URL重定向的重要指令。</li><li><code>regex</code>用来匹配URI的正则表达式；</li><li><code>replacement</code>匹配成功后用来替换URI中被截取内容的字符串，默认情况如果该字符串包含“http://”、&quot;https://&quot;开头，则不会继续向下对URI进行其他处理。直接返回重写的URI给客户端</li><li><code>flag</code>用来设置rewrite对URI的处理行为,包含如下数据：</li></ul></li></ul><table><thead><tr><th>标记符号</th><th>说明</th></tr></thead><tbody><tr><td>last</td><td>终止在本location块中处理接收到的URI，并将此处重写的URI作为新的URI使用其他location进行处理。（只是终止当前location的处理）</td></tr><tr><td>break</td><td>将此处重写的URI作为一个新的URI在当前location中继续执行，并不会将新的URI转向其他location。</td></tr><tr><td>redirect</td><td>将重写后的URI返回个客户端，状态码是302，表明临时重定向，主要用在replacement字符串不以“http://”，“ https://”或“ $scheme” 开头；</td></tr><tr><td>permanent</td><td>将重写的URI返回客户端，状态码为301,指明是永久重定向；</td></tr></tbody></table><p><strong>Redirect</strong></p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>rewrite ^(.*) http://example.com$1 redirect;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>防盗链</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location ~* \\.(gif|jpg|swf)$ {</span></span>
<span class="line"><span>    valid_referers none blocked start.igrow.cn sta.igrow.cn;</span></span>
<span class="line"><span>    if ($invalid_referer) {</span></span>
<span class="line"><span>        rewrite ^/ http://$host/logo.png;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断表达式" tabindex="-1"><a class="header-anchor" href="#判断表达式"><span>判断表达式</span></a></h2><table><thead><tr><th>表达式</th><th>说明</th></tr></thead><tbody><tr><td><code>-d</code> 和 <code>!-d</code></td><td>用来判断是否存在目录</td></tr><tr><td><code>-e</code> 和 <code>!-e</code></td><td>用来判断是否存在文件或目录</td></tr><tr><td><code>-f</code> 和 <code>!-f</code></td><td>用来判断是否存在文件</td></tr><tr><td><code>-x</code> 和 <code>!-x</code></td><td>用来判断文件是否可执行</td></tr></tbody></table><h2 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量"><span>全局变量</span></a></h2><p><strong>常见变量</strong></p><table><thead><tr><th>变量</th><th>作用</th></tr></thead><tbody><tr><td><code>$arg_名称</code></td><td>URL 中某个具体参数的值</td></tr><tr><td><code>$args</code></td><td>这个变量等于请求行中(GET请求)的参数，同$query_string</td></tr><tr><td><code>$body_bytes_sent</code></td><td>传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的&quot;%B&quot;参数保持兼容</td></tr><tr><td><code>$bytes_sent</code></td><td>传输给客户端的字节数</td></tr><tr><td><code>$content_length</code></td><td>HTTP 请求中标识包体长度的Content-Length头部的值，头部没有这个则为空</td></tr><tr><td><code>$content_type</code></td><td>标识请求包体类型的Content-Type 头部的值</td></tr><tr><td><code>$cookie_名称</code></td><td>客户端请求Header头中的cookie变量，前缀&quot;$cookie_&quot;加上cookie名称的变量，该变量的值即为cookie名称的值</td></tr><tr><td><code>$document_root</code></td><td>当前请求在root指令中指定的值。</td></tr><tr><td><code>$document_uri</code></td><td>与uri完全相同</td></tr><tr><td><code>$host</code></td><td>请求主机头字段，否则为服务器名称。</td></tr><tr><td><code>$http_cookie</code></td><td>客户端cookie信息</td></tr><tr><td><code>$http_host</code></td><td>请求地址，即浏览器中你输入的地址（IP或域名）</td></tr><tr><td><code>$http_referer</code></td><td>url跳转来源,用来记录从那个页面链接访问过来的</td></tr><tr><td><code>$http_user_agent</code></td><td>客户端agent信息</td></tr><tr><td><code>$http_x_forwarded_for</code></td><td>当前端有代理服务器时，设置web节点记录客户端地址的配置，此参数生效的前提是代理服务器也要进行相关的x_forwarded_for设置</td></tr><tr><td><code>$http_名称</code></td><td>匹配任意请求头字段；变量名中的后半部分名称可以替换成任意请求头字段，如在配置文件中需要获取http请求头：&quot;Accept-Language&quot;，$http_accept_language即可</td></tr><tr><td><code>$https</code></td><td>如果开启了SSL安全模式，值为&quot;on&quot;，否则为空字符串。</td></tr><tr><td><code>$is_args</code></td><td>如果已经设置$args，则该变量的值为&quot;？&quot;，否则为&quot;&quot;。</td></tr><tr><td><code>$limit_rate</code></td><td>这个变量可以限制连接速率。</td></tr><tr><td><code>$pipe</code></td><td>如果请求来自管道通信，值为&quot;p&quot;，否则为&quot;.&quot;</td></tr><tr><td><code>$query_string</code></td><td>与args变量完全相同</td></tr><tr><td><code>$realpath_root</code></td><td>当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径</td></tr><tr><td><code>$remote_user</code></td><td>有HTTP Basic Authentication 协议传入的用户名，已经经过Auth Basic Module验证的用户名。</td></tr><tr><td><code>$request_body_file</code></td><td>客户端请求主体信息的临时文件名。</td></tr><tr><td><code>$request_body</code></td><td>客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器</td></tr><tr><td><code>$request_filename</code></td><td>当前请求的文件路径，由root或alias指令与URI请求生成。</td></tr><tr><td><code>$request_length</code></td><td>所有请求内容的大小，包括请求行，头部，包体等</td></tr><tr><td><code>$request_method</code></td><td>客户端请求的动作，通常为GET或POST。</td></tr><tr><td><code>$request_uri</code></td><td>包含请求参数的原始URI，不包含主机名，如：&quot;/?dir=DeveloperTool&quot;。</td></tr><tr><td><code>$request</code></td><td>原始的url请求，含有方法和协议版本</td></tr><tr><td><code>$scheme</code></td><td>HTTP协议 HTTP 或者 HTTPS</td></tr><tr><td><code>$sent_http_名称</code></td><td>可以设置任意http响应头字段；变量名中的后半部分名称可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可</td></tr><tr><td><code>$status</code></td><td>HTTP响应代码</td></tr><tr><td><code>$uri</code></td><td>请求的URI，不包含主机名，不包含?后的参数</td></tr></tbody></table><blockquote><p><code>$request_body_file</code> 将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要执意开启此功能， 需要设置<code>client_body_in_file_only</code>。如果将次文件传递给后端的代理服务器，需要禁用<code>request body</code>， 即设置<code>proxy_pass_request_body off</code>，<code>fastcgi_pass_request_body off</code>， <code>uwsgi_pass_request_body off</code>，<code>scgi_pass_request_body off</code></p></blockquote><p><strong>TCP相关变量</strong></p><table><thead><tr><th>变量</th><th>作用</th></tr></thead><tbody><tr><td><code>$binary_remote_addr</code></td><td>客户端地质的整型格式，对于IPv4是4字节</td></tr><tr><td><code>$connection_requests</code></td><td>当前连接上执行过的请求数，对keepalive 有意义</td></tr><tr><td><code>$connection</code></td><td>递增的连接序号</td></tr><tr><td><code>$proxy_protocol_addr</code></td><td>若使用了proxy_protocol 协议则返回协议中的地址</td></tr><tr><td><code>$proxy_protocol_port</code></td><td>若使用了proxy_protocol 协议则返回协议中的端口</td></tr><tr><td><code>$remote_addr</code></td><td>客户端地址</td></tr><tr><td><code>$remote_port</code></td><td>客户端端口</td></tr><tr><td><code>$server_addr</code></td><td>服务器端地址(本端地址)，在完成一次系统调用后可以确定这个值。</td></tr><tr><td><code>$server_port</code></td><td>请求到达服务器的端口号。</td></tr><tr><td><code>$server_protocol</code></td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</td></tr><tr><td><code>$TCP_INFO</code></td><td>tcp内核层参数（$tcpinfo_rtt,$tcpinfo_rttvar,$tcpinfo_snd_cwnd,$tcpinfo_rcv_space）</td></tr></tbody></table><p><strong>处理请求过程中产生的变量</strong></p><table><thead><tr><th>变量</th><th>作用</th></tr></thead><tbody><tr><td><code>$request_completion</code></td><td>若请求处理完则返回OK，否则为空</td></tr><tr><td><code>$request_id</code></td><td>以16禁止输出的请求标识id，随即生成</td></tr><tr><td><code>$request_time</code></td><td>请求处理到现在的耗时</td></tr><tr><td><code>$server_name</code></td><td>匹配上的请求server_name</td></tr></tbody></table><p><strong>系统变量</strong></p><table><thead><tr><th>变量</th><th>作用</th></tr></thead><tbody><tr><td><code>$hostname</code></td><td>与系统上输出hostname 一致</td></tr><tr><td><code>$pid</code></td><td>所属worker进程的id</td></tr><tr><td><code>$time_local</code></td><td>以本地时间的标准输出</td></tr><tr><td><code>$time_iso8601</code></td><td>服务器时间的ISO 8610格式</td></tr><tr><td><code>$msec</code></td><td>当前的Unix时间戳</td></tr><tr><td><code>$nginx_version</code></td><td>nginx版本</td></tr></tbody></table><h2 id="判断user-agent" tabindex="-1"><a class="header-anchor" href="#判断user-agent"><span>判断user_agent</span></a></h2><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 设置变量</span></span>
<span class="line"><span>set $mobile_user_agent &quot;(MIDP)|(WAP)|(UP.Browser)|(Smartphone)</span></span>
<span class="line"><span>|(Obigo)|(Mobile)|(AU.Browser)|(wxd.Mms)|(WxdB.Browser)|(CLDC)</span></span>
<span class="line"><span>|(UP.Link)|(KM.Browser)|(UCWEB)|(SEMC-Browser)|(Mini)|(Symbian)</span></span>
<span class="line"><span>|(Palm)|(Nokia)|(Panasonic)|(MOT-)|(SonyEricsson)|(NEC-)|(Alcatel)</span></span>
<span class="line"><span>|(Ericsson)|(BENQ)|(BenQ)|(Amoisonic)|(Amoi-)|(Capitel)|(PHILIPS)</span></span>
<span class="line"><span>|(SAMSUNG)|(Lenovo)|(Mitsu)|(Motorola)|(SHARP)|(WAPPER)|(LG-)</span></span>
<span class="line"><span>|(LG/)|(EG900)|(CECT)|(Compal)|(kejian)|(Bird)|(BIRD)|(G900/V1.0)</span></span>
<span class="line"><span>|(Arima)|(CTL)|(TDG)|(Daxian)|(DAXIAN)|(DBTEL)|(Eastcom)|(EASTCOM)</span></span>
<span class="line"><span>|(PANTECH)|(Dopod)|(Haier)|(HAIER)|(KONKA)|(KEJIAN)|(LENOVO)</span></span>
<span class="line"><span>|(Soutec)|(SOUTEC)|(SAGEM)|(SEC-)|(SED-)|(EMOL-)|(INNO55)</span></span>
<span class="line"><span>|(ZTE)|(iPhone)|(Android)|(Windows CE)|(Wget)|(Java)|(curl)|(Opera)&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 判断是否为移动端访问</span></span>
<span class="line"><span>if ( $http_user_agent ~ &quot;$mobile_user_agent&quot; ) {</span></span>
<span class="line"><span>    # 重写URI作为一个新的URI在当前location中继续执行。</span></span>
<span class="line"><span>    # 目的是在if块中proxy_pass不能带URI</span></span>
<span class="line"><span>    rewrite ^ /URI参数$1 break;</span></span>
<span class="line"><span>    proxy_pass https://127.0.0.1;</span></span>
<span class="line"><span>    #proxy_set_header Host $host;</span></span>
<span class="line"><span>    proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>    proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># cloudflare 默认会在header里面加上’HTTP_CF_IPCOUNTRY’</span></span>
<span class="line"><span># 禁止某些国家, user agent 的访问，配置在http（全局）</span></span>
<span class="line"><span>map $http_cf_ipcountry $allow {</span></span>
<span class="line"><span>    default yes;</span></span>
<span class="line"><span>    US no;</span></span>
<span class="line"><span>    CA no;</span></span>
<span class="line"><span>    UK no;</span></span>
<span class="line"><span>    AU no;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 在server或location中配置</span></span>
<span class="line"><span>if ($allow = no) {</span></span>
<span class="line"><span>    return 403;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="proxy-pass指令" tabindex="-1"><a class="header-anchor" href="#proxy-pass指令"><span>proxy_pass指令</span></a></h2><blockquote><p>nginx无法在<code>proxy_pass</code>指令中处理所需的URI部分，因为位于指定的位置（因此是错误消息）。 这是因为nginx是以模块化的方式构建的，每个配置块都是由各个模块在各个阶段读取的。</p></blockquote><ul><li><code>proxy_pass</code>在以下情况下，指令中不能有URI ： <ul><li>正则表达式位置</li><li>命名的地点</li><li>if 块</li></ul></li></ul><blockquote><p>解决方案可见<a href="#%E5%88%A4%E6%96%ADuser-agent">判断<code>user_agent</code></a></p></blockquote><ul><li><code>proxy_set_header</code> 设置请求头信息给上游服务器</li><li><code>add_header</code> 设置响应头信息给浏览器</li></ul><h2 id="日志切割" tabindex="-1"><a class="header-anchor" href="#日志切割"><span>日志切割</span></a></h2><blockquote><p>在<code>nginx.conf</code>中配置<code>log_format</code>（可以配置在<code>server</code>中），含义是配置了一个名为<code>main</code>的日志格式化的规则，应用在了<code>access_log</code>的日志上</p></blockquote><p><strong>使用到<code>timeiso8601</code>内嵌变量来获取时间配置日志循环</strong></p><ul><li><a href="https://github.com/jingsam/jingsam.github.io/blob/source/source/_posts/2019-01-15-nginx-access-log.md" target="_blank" rel="noopener noreferrer">简单搞定Nginx日志分割</a></li></ul><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 可能出现if条件不成立的情况，推荐在http块中使用map</span></span>
<span class="line"><span>if ($time_iso8601 ~ &quot;^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})&quot;) {</span></span>
<span class="line"><span>    set $year $1;</span></span>
<span class="line"><span>    set $month $2;</span></span>
<span class="line"><span>    set $day $3;</span></span>
<span class="line"><span>    set $hour $4;</span></span>
<span class="line"><span>    set $minutes $5;</span></span>
<span class="line"><span>    set $seconds $6;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>access_log logs/$year-$month-$day-$hour$minutes$seconds-access.log main;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Perl语法</span></span>
<span class="line"><span>if ($time_iso8601 ~ &quot;^(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})&quot;) {}</span></span>
<span class="line"><span>access_log logs/$year-$month-$day-access.log main;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># http块中不允许使用if，使用map替代</span></span>
<span class="line"><span>map $time_iso8601 $logdate {</span></span>
<span class="line"><span>    &#39;~^(?&lt;ymd&gt;\\d{4}-\\d{2}-\\d{2}-\\d{6})&#39;   $ymd;</span></span>
<span class="line"><span>    default                               &#39;nodate&#39;;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>access_log logs/access_\${logdate}.log;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>日志归档程序logrotate</strong></p><ul><li><a href="https://github.com/fordmason/cronolog" target="_blank" rel="noopener noreferrer">https://github.com/fordmason/cronolog</a></li><li><a href="https://github.com/logrotate/logrotate" target="_blank" rel="noopener noreferrer">https://github.com/logrotate/logrotate</a></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/logrotate.d/nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>kill -USR1 cat /usr/local/nginx/logs/nginx.pid</code> 向nginx主进程发送USR1信号用于重新读取日志文件</p></blockquote><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>/home/nginx/logs/*.log { # 目录下所有以.log结尾的文件</span></span>
<span class="line"><span>    daily # 按天切割</span></span>
<span class="line"><span>    #dateformat %Y%m%d # 切割后文件后缀，不能使用log，否则会使文件进行继续切割</span></span>
<span class="line"><span>    #extension .log # 切割文件后缀</span></span>
<span class="line"><span>    rotate 7 # 保留天数</span></span>
<span class="line"><span>    #create 0640 root root   # 切割后日志权限</span></span>
<span class="line"><span>    missingok</span></span>
<span class="line"><span>    dateext</span></span>
<span class="line"><span>    notifempty</span></span>
<span class="line"><span>    sharedscripts</span></span>
<span class="line"><span>    prerotate</span></span>
<span class="line"><span>        if [ -d /etc/logrotate.d/nginx ]; then \\  # 判断切割文件</span></span>
<span class="line"><span>            run-parts /etc/logrotate.d/nginx; \\</span></span>
<span class="line"><span>        fi \\</span></span>
<span class="line"><span>    endscript</span></span>
<span class="line"><span>    postrotate</span></span>
<span class="line"><span>        [ -e /usr/local/nginx/logs/nginx.pid ] &amp;&amp; kill -USR1 \`cat /home/nginx/logs/nginx.pid\`</span></span>
<span class="line"><span>    endscript</span></span>
<span class="line"><span>    postrotate</span></span>
<span class="line"><span>        [ ! -f /var/nginx.pid ] || kill -USR1 \`cat /home/nginx/logs/nginx.pid\`</span></span>
<span class="line"><span>    endscript</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主配置" tabindex="-1"><a class="header-anchor" href="#主配置"><span>主配置</span></a></h2><ul><li><a href="https://blog.csdn.net/DeliaPu/article/details/108647180" target="_blank" rel="noopener noreferrer">Nginx配置文件解析</a></li><li><a href="https://www.cnblogs.com/wxxjianchi/p/13582252.html" target="_blank" rel="noopener noreferrer">nginx - HowOldAreYou - 博客园</a></li></ul><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>user www www;</span></span>
<span class="line"><span>worker_processes auto;</span></span>
<span class="line"><span>error_log /logs/nginx_error.log crit;</span></span>
<span class="line"><span>pid /logs/nginx.pid;</span></span>
<span class="line"><span>worker_rlimit_nofile 51200;</span></span>
<span class="line"><span>events {</span></span>
<span class="line"><span>    use epoll;</span></span>
<span class="line"><span>    worker_connections 51200;</span></span>
<span class="line"><span>    multi_accept on;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>http {</span></span>
<span class="line"><span>    # 扩展名与文件类型映射表</span></span>
<span class="line"><span>    include mime.types;</span></span>
<span class="line"><span>    #include luawaf.conf;</span></span>
<span class="line"><span>    include proxy.conf;</span></span>
<span class="line"><span>    include /vhost/*.conf;</span></span>
<span class="line"><span>    # 默认类型</span></span>
<span class="line"><span>    default_type application/octet-stream;</span></span>
<span class="line"><span>    server_names_hash_bucket_size 512;</span></span>
<span class="line"><span>    # 设置请求缓冲</span></span>
<span class="line"><span>    client_header_buffer_size 32k;</span></span>
<span class="line"><span>    large_client_header_buffers 4 32k;</span></span>
<span class="line"><span>    client_max_body_size 500m;</span></span>
<span class="line"><span>    # 开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，</span></span>
<span class="line"><span>    # 如果用来进行下载等应用磁盘 IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，</span></span>
<span class="line"><span>    # 降低系统的负载。注意：如果图片显示不正常把这个改成off。</span></span>
<span class="line"><span>    sendfile on;</span></span>
<span class="line"><span>    tcp_nopush on;</span></span>
<span class="line"><span>    # 设置连接超时时间，单位是秒</span></span>
<span class="line"><span>    keepalive_timeout 60;</span></span>
<span class="line"><span>    tcp_nodelay on;</span></span>
<span class="line"><span>    fastcgi_connect_timeout 300;</span></span>
<span class="line"><span>    fastcgi_send_timeout 300;</span></span>
<span class="line"><span>    fastcgi_read_timeout 300;</span></span>
<span class="line"><span>    fastcgi_buffer_size 64k;</span></span>
<span class="line"><span>    fastcgi_buffers 4 64k;</span></span>
<span class="line"><span>    fastcgi_busy_buffers_size 128k;</span></span>
<span class="line"><span>    fastcgi_temp_file_write_size 256k;</span></span>
<span class="line"><span>    fastcgi_intercept_errors on;</span></span>
<span class="line"><span>    # 开启gzip压缩</span></span>
<span class="line"><span>    gzip on;</span></span>
<span class="line"><span>    gzip_min_length 1k;</span></span>
<span class="line"><span>    gzip_buffers 4 16k;</span></span>
<span class="line"><span>    gzip_http_version 1.1;</span></span>
<span class="line"><span>    gzip_comp_level 2;</span></span>
<span class="line"><span>    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span></span>
<span class="line"><span>    gzip_vary on;</span></span>
<span class="line"><span>    gzip_proxied expired no-cache no-store private auth;</span></span>
<span class="line"><span>    gzip_disable &quot;MSIE [1-6]\\.&quot;;</span></span>
<span class="line"><span>    limit_conn_zone $binary_remote_addr zone=perip:10m;</span></span>
<span class="line"><span>    limit_conn_zone $server_name zone=perserver:10m;</span></span>
<span class="line"><span>    server_tokens off;</span></span>
<span class="line"><span>    # 关闭日志</span></span>
<span class="line"><span>    access_log off;</span></span>
<span class="line"><span>    # 输出日志</span></span>
<span class="line"><span>    #error_log /dev/null;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动静分离配置" tabindex="-1"><a class="header-anchor" href="#动静分离配置"><span>动静分离配置</span></a></h2><p><strong>静态文件在本地</strong></p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    listen 443 ssl http2;</span></span>
<span class="line"><span>    server_name www.woetu.com woetu.com;</span></span>
<span class="line"><span>    index index.html index.htm default.htm default.html;</span></span>
<span class="line"><span>    root html;</span></span>
<span class="line"><span>    # SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则</span></span>
<span class="line"><span>    #error_page 404/404.html;</span></span>
<span class="line"><span>    # HTTP_TO_HTTPS_START</span></span>
<span class="line"><span>    if ($server_port !~ 443) {</span></span>
<span class="line"><span>        rewrite ^(/.*)$ https://$host$1 permanent;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    # HTTP_TO_HTTPS_END</span></span>
<span class="line"><span>    ssl_certificate /etc/letsencrypt/live/www/fullchain.pem;</span></span>
<span class="line"><span>    ssl_certificate_key /etc/letsencrypt/live/www/privkey.pem;</span></span>
<span class="line"><span>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span>    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span></span>
<span class="line"><span>    ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span>    ssl_session_cache shared:SSL:10m;</span></span>
<span class="line"><span>    ssl_session_timeout 10m;</span></span>
<span class="line"><span>    error_page 497 https://$host$request_uri;</span></span>
<span class="line"><span>    # SSL-END</span></span>
<span class="line"><span>    # ERROR-PAGE-START  错误页配置，可以注释、删除或修改</span></span>
<span class="line"><span>    error_page 404 /404.html;</span></span>
<span class="line"><span>    error_page 502 /502.html;</span></span>
<span class="line"><span>    # ERROR-PAGE-END</span></span>
<span class="line"><span>    # PROXY-START/</span></span>
<span class="line"><span>    # 配置首页，这里必须要有一个=号</span></span>
<span class="line"><span>    location =/ {</span></span>
<span class="line"><span>        index index.html index.htm;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    # 拦截静态文件后缀</span></span>
<span class="line"><span>    location ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {</span></span>
<span class="line"><span>        # 配置静态资源地址</span></span>
<span class="line"><span>        root /home/html/index;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    # 拦截静态文件后缀</span></span>
<span class="line"><span>    #location ~ \\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$ {</span></span>
<span class="line"><span>    # 配置静态资源地址</span></span>
<span class="line"><span>    #        root /home/html/index;</span></span>
<span class="line"><span>    #}</span></span>
<span class="line"><span>    # 动态请求转发</span></span>
<span class="line"><span>    location ~.*$ {</span></span>
<span class="line"><span>        proxy_pass http://localhost:8080;</span></span>
<span class="line"><span>        proxy_set_header Host $host;</span></span>
<span class="line"><span>        proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>        proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>        # 解决https-&gt;nginx-&gt;http-&gt;tomcat重定向问题</span></span>
<span class="line"><span>        proxy_redirect ~^http://([^:]+)(:\\d+)?(.*)$ https://$1$3;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    # PROXY-END/</span></span>
<span class="line"><span>    # 禁止访问的文件或目录</span></span>
<span class="line"><span>    location ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md) {</span></span>
<span class="line"><span>        return 404;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    # 一键申请SSL证书验证目录相关设置</span></span>
<span class="line"><span>    location ~ \\.well-known {</span></span>
<span class="line"><span>        allow all;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    access_log /logs/wwwlog;</span></span>
<span class="line"><span>    error_log /logs/wwwlog;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>静态文件在镜像存储</strong></p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#PROXY-START/</span></span>
<span class="line"><span>location = / {</span></span>
<span class="line"><span>    #rewrite (.*) $1index.html;</span></span>
<span class="line"><span>    index /index.html;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span># 拦截静态文件后缀</span></span>
<span class="line"><span>location ~ .*\\.(htm|html|js|css|jpg|png|gif|eot|svg|ttf|woff|woff2)$|/static/ {</span></span>
<span class="line"><span>    # 配置静态资源地址</span></span>
<span class="line"><span>    #root ./vhost/html;</span></span>
<span class="line"><span>	root &quot;/index&quot;;</span></span>
<span class="line"><span>	# 将此处重写的URI作为一个新的URI在当前location中继续执行，并不会将新的URI转向其他location</span></span>
<span class="line"><span>	rewrite ^(.*)$ /index/$1 break;</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	proxy_pass https://test.cos.ap-hongkong.myqcloud.com;</span></span>
<span class="line"><span>    #proxy_set_header Host $host;</span></span>
<span class="line"><span>	proxy_set_header Host test.cos.ap-hongkong.myqcloud.com;</span></span>
<span class="line"><span>    proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>    proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    add_header X-Cache $upstream_cache_status;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    #Set Nginx Cache</span></span>
<span class="line"><span>    add_header Cache-Control no-cache;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>location / {</span></span>
<span class="line"><span>    proxy_pass http://127.0.0.1:8081;</span></span>
<span class="line"><span>    proxy_set_header Host $host;</span></span>
<span class="line"><span>    proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span>    proxy_set_header REMOTE-HOST $remote_addr;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    add_header X-Cache $upstream_cache_status;</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    #Set Nginx Cache</span></span>
<span class="line"><span>    add_header Cache-Control no-cache;</span></span>
<span class="line"><span>    #expires 12h;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#PROXY-END/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,88))])}const m=t(c,[["render",u],["__file","Nginx.html.vue"]]),k=JSON.parse('{"path":"/System/Nginx.html","title":"Nginx","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Flag","slug":"flag","link":"#flag","children":[]},{"level":2,"title":"扩展模块插件","slug":"扩展模块插件","link":"#扩展模块插件","children":[]},{"level":2,"title":"编译安装","slug":"编译安装","link":"#编译安装","children":[]},{"level":2,"title":"location","slug":"location","link":"#location","children":[{"level":3,"title":"语法规则","slug":"语法规则","link":"#语法规则","children":[]},{"level":3,"title":"内部调用","slug":"内部调用","link":"#内部调用","children":[]},{"level":3,"title":"以后缀设置过期时间","slug":"以后缀设置过期时间","link":"#以后缀设置过期时间","children":[]},{"level":3,"title":"禁止访问某个目录","slug":"禁止访问某个目录","link":"#禁止访问某个目录","children":[]}]},{"level":2,"title":"rewrite语法","slug":"rewrite语法","link":"#rewrite语法","children":[]},{"level":2,"title":"判断表达式","slug":"判断表达式","link":"#判断表达式","children":[]},{"level":2,"title":"全局变量","slug":"全局变量","link":"#全局变量","children":[]},{"level":2,"title":"判断user_agent","slug":"判断user-agent","link":"#判断user-agent","children":[]},{"level":2,"title":"proxy_pass指令","slug":"proxy-pass指令","link":"#proxy-pass指令","children":[]},{"level":2,"title":"日志切割","slug":"日志切割","link":"#日志切割","children":[]},{"level":2,"title":"主配置","slug":"主配置","link":"#主配置","children":[]},{"level":2,"title":"动静分离配置","slug":"动静分离配置","link":"#动静分离配置","children":[]}],"git":{"createdTime":1726030162000,"updatedTime":1726030162000,"contributors":[{"name":"onni-top","email":"admin@onni.top","commits":1}]},"readingTime":{"minutes":15.74,"words":4722},"filePathRelative":"System/Nginx.md","localizedDate":"2024年9月11日","excerpt":"\\n\\n<h2>Flag</h2>\\n<ul>\\n<li><a href=\\"https://github.com/nginx\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/nginx</a>\\n<ul>\\n<li><a href=\\"http://nginx.org/en/download.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://nginx.org/en/download.html</a></li>\\n<li><a href=\\"http://nginx.org/en/docs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://nginx.org/en/docs</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/nginxinc\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/nginxinc</a></li>\\n<li><a href=\\"https://github.com/h5bp/server-configs-nginx\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/h5bp/server-configs-nginx</a></li>\\n<li><a href=\\"https://github.com/digitalocean/nginxconfig.io\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/digitalocean/nginxconfig.io</a>\\n<ul>\\n<li><a href=\\"https://www.digitalocean.com/community/tools/nginx\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.digitalocean.com/community/tools/nginx</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://github.com/alibaba/tengine\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/alibaba/tengine</a></li>\\n</ul>"}');export{m as comp,k as data};
