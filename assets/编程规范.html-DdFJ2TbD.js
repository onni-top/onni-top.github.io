import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,c as o,b as i,d as l,w as r,a as h,o as p,e as a}from"./app--VhlLr_b.js";const c="/images/clean-code.png",g={},d={class:"table-of-contents"};function u(k,e){const t=n("router-link");return p(),o("div",null,[e[8]||(e[8]=i("h1",{id:"编程规范",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#编程规范"},[i("span",null,"编程规范")])],-1)),i("nav",d,[i("ul",null,[i("li",null,[l(t,{to:"#flag"},{default:r(()=>e[0]||(e[0]=[a("Flag")])),_:1})]),i("li",null,[l(t,{to:"#代码风格指南"},{default:r(()=>e[1]||(e[1]=[a("代码风格指南")])),_:1}),i("ul",null,[i("li",null,[l(t,{to:"#命名规范"},{default:r(()=>e[2]||(e[2]=[a("命名规范")])),_:1})]),i("li",null,[l(t,{to:"#golang"},{default:r(()=>e[3]||(e[3]=[a("Golang")])),_:1})]),i("li",null,[l(t,{to:"#python"},{default:r(()=>e[4]||(e[4]=[a("Python")])),_:1})])])]),i("li",null,[l(t,{to:"#gnu风格版本规则"},{default:r(()=>e[5]||(e[5]=[a("GNU风格版本规则")])),_:1})]),i("li",null,[l(t,{to:"#commit提交规范"},{default:r(()=>e[6]||(e[6]=[a("Commit提交规范")])),_:1})]),i("li",null,[l(t,{to:"#switch"},{default:r(()=>e[7]||(e[7]=[a("switch")])),_:1})])])]),e[9]||(e[9]=h('<h2 id="flag" tabindex="-1"><a class="header-anchor" href="#flag"><span>Flag</span></a></h2><ul><li><a href="https://github.com/topics/styleguide" target="_blank" rel="noopener noreferrer">https://github.com/topics/styleguide</a></li><li>十二要素 <a href="https://github.com/heroku/12factor" target="_blank" rel="noopener noreferrer">https://github.com/heroku/12factor</a></li><li>敏捷宣言 <a href="https://agilemanifesto.org" target="_blank" rel="noopener noreferrer">https://agilemanifesto.org</a></li><li>贡献者契约 <a href="https://github.com/EthicalSource" target="_blank" rel="noopener noreferrer">https://github.com/EthicalSource</a><ul><li><a href="https://www.contributor-covenant.org" target="_blank" rel="noopener noreferrer">https://www.contributor-covenant.org</a></li></ul></li><li>License <a href="https://en.wikipedia.org/wiki/Software_license" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Software_license</a></li><li><a href="https://github.com/fossas" target="_blank" rel="noopener noreferrer">https://github.com/fossas</a><ul><li><a href="https://app.fossa.com" target="_blank" rel="noopener noreferrer">https://app.fossa.com</a></li><li><a href="https://fossa.com/learn/developers-guide-open-source-software-licenses" target="_blank" rel="noopener noreferrer">https://fossa.com/learn/developers-guide-open-source-software-licenses</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener noreferrer">如何选择开源许可证？</a></li><li><a href="https://blog.csdn.net/wadefelix/article/details/6384317" target="_blank" rel="noopener noreferrer">如何选择开源许可证？</a></li></ul></li><li><a href="https://spdx.org/licenses" target="_blank" rel="noopener noreferrer">https://spdx.org/licenses</a></li><li><a href="https://opensource.org/licenses" target="_blank" rel="noopener noreferrer">https://opensource.org/licenses</a></li><li>开源指南 <a href="https://github.com/github/opensource.guide" target="_blank" rel="noopener noreferrer">https://github.com/github/opensource.guide</a></li><li><a href="https://creativecommons.org" target="_blank" rel="noopener noreferrer">https://creativecommons.org</a></li></ul><ul><li><a href="https://github.com/Wei-Xia/most-frequent-technology-english-words" target="_blank" rel="noopener noreferrer">程序员工作中常见的英语词汇</a></li></ul><ul><li><a href="https://www.apiref.com" target="_blank" rel="noopener noreferrer">https://www.apiref.com</a></li><li><a href="https://www.5axxw.com/wiki/content/l0zgs0" target="_blank" rel="noopener noreferrer">HTTP 的业务错误码</a></li><li><a href="https://open.weibo.com/wiki/Error_code" target="_blank" rel="noopener noreferrer">https://open.weibo.com/wiki/Error_code</a></li><li><a href="https://www.zhihu.com/question/31413235" target="_blank" rel="noopener noreferrer">适合测试人员看的经典书籍有哪些？</a></li><li><a href="https://zhuanlan.zhihu.com/p/128095045" target="_blank" rel="noopener noreferrer">《软件测试的艺术》读书笔记</a></li><li><a href="https://blog.csdn.net/weixin_31484477/article/details/81074198" target="_blank" rel="noopener noreferrer">软件测试之代码审查和代码走查</a></li><li>安全评估 <a href="https://github.com/chaitin/xray" target="_blank" rel="noopener noreferrer">https://github.com/chaitin/xray</a></li><li><a href="https://github.com/whwlsfb/BurpCrypto" target="_blank" rel="noopener noreferrer">https://github.com/whwlsfb/BurpCrypto</a></li><li><a href="https://github.com/iseki0/blog/blob/master/source/_posts/why-you-should-not-use-timestamp-again.md" target="_blank" rel="noopener noreferrer">为什么你不应该继续在文本格式中使用时间戳</a></li><li>UUID <a href="https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format" target="_blank" rel="noopener noreferrer">https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format</a></li><li><a href="https://github.com/ai/nanoid" target="_blank" rel="noopener noreferrer">https://github.com/ai/nanoid</a></li><li><a href="https://github.com/sony/sonyflake" target="_blank" rel="noopener noreferrer">https://github.com/sony/sonyflake</a></li><li><a href="https://github.com/segmentio/ksuid" target="_blank" rel="noopener noreferrer">https://github.com/segmentio/ksuid</a></li><li><a href="https://github.com/rs/xid" target="_blank" rel="noopener noreferrer">https://github.com/rs/xid</a></li><li><a href="https://github.com/paralleldrive/cuid2" target="_blank" rel="noopener noreferrer">https://github.com/paralleldrive/cuid2</a><ul><li><a href="https://github.com/paralleldrive/cuid" target="_blank" rel="noopener noreferrer">https://github.com/paralleldrive/cuid</a></li></ul></li><li><a href="https://github.com/ai/nanoid" target="_blank" rel="noopener noreferrer">https://github.com/ai/nanoid</a></li><li><a href="https://github.com/boundary/flake" target="_blank" rel="noopener noreferrer">https://github.com/boundary/flake</a></li><li><a href="https://github.com/richardtallent/RT.Comb" target="_blank" rel="noopener noreferrer">https://github.com/richardtallent/RT.Comb</a></li><li><a href="https://github.com/ppearcy/elasticflake" target="_blank" rel="noopener noreferrer">https://github.com/ppearcy/elasticflake</a></li><li><a href="https://github.com/T-PWK/flake-idgen" target="_blank" rel="noopener noreferrer">https://github.com/T-PWK/flake-idgen</a></li><li><a href="https://github.com/uuidjs/uuid" target="_blank" rel="noopener noreferrer">https://github.com/uuidjs/uuid</a></li><li>雪花算法唯一数字ID <a href="https://github.com/yitter/IdGenerator" target="_blank" rel="noopener noreferrer">https://github.com/yitter/IdGenerator</a></li><li><a href="https://github.com/sqids" target="_blank" rel="noopener noreferrer">https://github.com/sqids</a></li><li>ULID <a href="https://github.com/ulid" target="_blank" rel="noopener noreferrer">https://github.com/ulid</a><ul><li><a href="https://blog.daveallie.com/ulid-primary-keys" target="_blank" rel="noopener noreferrer">ULIDs and Primary Keys</a></li></ul></li><li><a href="https://github.com/geckoboard/pgulid" target="_blank" rel="noopener noreferrer">https://github.com/geckoboard/pgulid</a></li><li><a href="https://github.com/oklog/ulid" target="_blank" rel="noopener noreferrer">https://github.com/oklog/ulid</a></li><li>随机数 <a href="https://www.random.org" target="_blank" rel="noopener noreferrer">https://www.random.org</a></li><li><a href="https://blog.cloudflare.com/harnessing-office-chaos" target="_blank" rel="noopener noreferrer">治理 Cloudflare 办公室里的混乱情况</a><ul><li><a href="https://github.com/ejcx/csprng.xyz" target="_blank" rel="noopener noreferrer">https://github.com/ejcx/csprng.xyz</a></li><li><a href="https://github.com/drand/drand" target="_blank" rel="noopener noreferrer">https://github.com/drand/drand</a></li><li><a href="https://github.com/thibmeu/drand-rs" target="_blank" rel="noopener noreferrer">https://github.com/thibmeu/drand-rs</a></li><li><a href="https://github.com/thibmeu/tlock-worker" target="_blank" rel="noopener noreferrer">https://github.com/thibmeu/tlock-worker</a></li><li><a href="https://github.com/filecoin-project" target="_blank" rel="noopener noreferrer">https://github.com/filecoin-project</a></li></ul></li></ul><blockquote><p>编程语言提供的随机数，是伪随机数，所谓伪随机数，并非真的随机，而是算法得到的。只要初始的种子值相同，算法会给出一样的结果。 一般来说，只有通过硬件，才能得到真随机数，单纯的软件算法做不到。真随机数需要满足三个条件。</p></blockquote><ol><li>无法预测。 随机数不能被猜到，所以必须非常大，否则会被暴力破解。</li><li>不能重复。 每次生成的随机数，不能是一样的。</li><li>均匀分布。 随机数必须平均散布在所有区间，不能集中在某些区间。</li></ol><p><strong>boolean</strong></p><blockquote><p>bool表示布尔型变量，bai也du就是逻辑型变量的定义符，zhi以英国数学家、布尔代数的奠基人乔dao治·布尔（George Boole）命名。</p></blockquote><blockquote><p>布尔型变量bool的取值只有false和true，0为false，非0为true。（例如-1和1都是true）</p></blockquote><p><strong>日期时间字符格式表示法</strong></p><ul><li><a href="https://zh.wikipedia.org/wiki/%E5%90%84%E5%9C%B0%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E8%A1%A8%E7%A4%BA%E6%B3%95" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/各地日期和时间表示法</a></li></ul><ul><li>ISO 8601(第一版为ISO8601:1988，第二版为ISO8601:2000，第三版ISO8601:2004)：国际标准，每周从周一开始，每年的第一周至少包含4天</li><li>Common：通用标准，每周从周日开始，每年的第一周至少包含1天</li></ul><h2 id="代码风格指南" tabindex="-1"><a class="header-anchor" href="#代码风格指南"><span>代码风格指南</span></a></h2><blockquote><p>naming conventions 约定大于配置</p></blockquote><ul><li><a href="https://github.com/topics/clean-code" target="_blank" rel="noopener noreferrer">https://github.com/topics/clean-code</a></li><li><a href="https://github.com/topics/styleguide" target="_blank" rel="noopener noreferrer">https://github.com/topics/styleguide</a></li><li><a href="https://github.com/topics/style-guide" target="_blank" rel="noopener noreferrer">https://github.com/topics/style-guide</a></li><li><a href="https://github.com/topics/formatter" target="_blank" rel="noopener noreferrer">https://github.com/topics/formatter</a></li><li><a href="https://github.com/topics/standard" target="_blank" rel="noopener noreferrer">https://github.com/topics/standard</a></li><li><a href="https://github.com/topics/conventions" target="_blank" rel="noopener noreferrer">https://github.com/topics/conventions</a></li></ul><ul><li><a href="https://github.com/Kristories/awesome-guidelines" target="_blank" rel="noopener noreferrer">https://github.com/Kristories/awesome-guidelines</a></li><li>Web界面开发指南 <a href="https://github.com/raunofreiberg/interfaces" target="_blank" rel="noopener noreferrer">https://github.com/raunofreiberg/interfaces</a></li><li>谷歌代码风格 <a href="https://github.com/google/styleguide" target="_blank" rel="noopener noreferrer">https://github.com/google/styleguide</a><ul><li><a href="https://github.com/google/google-java-format" target="_blank" rel="noopener noreferrer">https://github.com/google/google-java-format</a></li><li><a href="https://hitzhangjie.github.io/blog/2019-09-10-%E5%A6%82%E4%BD%95%E6%9B%B4%E5%A5%BD%E5%9C%B0%E8%BF%9B%E8%A1%8C%E4%BB%A3%E7%A0%81review/" target="_blank" rel="noopener noreferrer">Google CR指引, 如何推进代码评审</a></li></ul></li><li>JavaScript <a href="https://github.com/standard/standard" target="_blank" rel="noopener noreferrer">https://github.com/standard/standard</a></li><li><a href="https://github.com/ryanmcdermott/clean-code-javascript" target="_blank" rel="noopener noreferrer">https://github.com/ryanmcdermott/clean-code-javascript</a></li><li><a href="https://github.com/sivan/javascript-style-guide" target="_blank" rel="noopener noreferrer">https://github.com/sivan/javascript-style-guide</a></li><li><a href="https://github.com/airbnb/javascript" target="_blank" rel="noopener noreferrer">https://github.com/airbnb/javascript</a><ul><li><a href="https://github.com/BingKui/javascript-zh" target="_blank" rel="noopener noreferrer">https://github.com/BingKui/javascript-zh</a></li></ul></li><li><a href="https://github.com/arcticicestudio/styleguide-javascript" target="_blank" rel="noopener noreferrer">https://github.com/arcticicestudio/styleguide-javascript</a></li><li>css <a href="https://github.com/necolas/idiomatic-css" target="_blank" rel="noopener noreferrer">https://github.com/necolas/idiomatic-css</a></li><li>HTML/CSS开发规范指南 <a href="https://github.com/doyoe/html-css-guide" target="_blank" rel="noopener noreferrer">https://github.com/doyoe/html-css-guide</a></li><li><a href="https://www.oracle.com/cn/java/technologies/javase/codeconventions-contents.html" target="_blank" rel="noopener noreferrer">https://www.oracle.com/cn/java/technologies/javase/codeconventions-contents.html</a><ul><li><a href="https://github.com/waylau/java-code-conventions" target="_blank" rel="noopener noreferrer">https://github.com/waylau/java-code-conventions</a></li></ul></li><li>阿里巴巴Java开发手册和插件 <a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/p3c</a></li><li>代码安全指南 <a href="https://github.com/Tencent/secguide" target="_blank" rel="noopener noreferrer">https://github.com/Tencent/secguide</a></li><li>干净的代码 <a href="https://github.com/JuanCrg90/Clean-Code-Notes" target="_blank" rel="noopener noreferrer">https://github.com/JuanCrg90/Clean-Code-Notes</a></li><li>系统重构与迁移指南 <a href="https://github.com/phodal/migration" target="_blank" rel="noopener noreferrer">https://github.com/phodal/migration</a></li><li><a href="https://github.com/xianweics/refator-code" target="_blank" rel="noopener noreferrer">https://github.com/xianweics/refator-code</a></li><li>安全编码手册 <a href="https://github.com/joswha/Secure-Coding-Handbook" target="_blank" rel="noopener noreferrer">https://github.com/joswha/Secure-Coding-Handbook</a></li><li>python <a href="https://www.python.org/dev/peps/pep-0008" target="_blank" rel="noopener noreferrer">https://www.python.org/dev/peps/pep-0008</a><ul><li><a href="https://github.com/PyCQA/pycodestyle" target="_blank" rel="noopener noreferrer">https://github.com/PyCQA/pycodestyle</a></li></ul></li></ul><ul><li><a href="https://www.cnblogs.com/polk6/p/4660195.html" target="_blank" rel="noopener noreferrer">JavaScript 开发规范</a></li><li><a href="https://blog.csdn.net/lihonghai2392/article/details/77915439" target="_blank" rel="noopener noreferrer">shell脚本编写规范</a></li><li><a href="https://en.wikibooks.org/wiki/Computer_Programming/Coding_Style/Minimize_nesting" target="_blank" rel="noopener noreferrer">计算机编程/编码风格/最小化嵌套</a></li></ul><details><summary><b>展开查看思维导图</b></summary><img src="'+c+`" alt></details><h3 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范"><span>命名规范</span></a></h3><ul><li>匈牙利命名法(Hungarian)：变量类型缩写+大驼峰，如int iMyAge，Windows编程常用</li><li>驼峰命名法(camelCase/lowerCamelCase，小驼峰)： 首字母小写，后续每个单词首字母都大写。面向对象语言(如Java、C#)变量、方法常用</li><li>帕斯卡命名法(CamelCase/Pascal Case，大驼峰)： 首字母大写，后续每个单词首字母都大写。常被面向对象语言(如Java、C#)类常用</li><li>下划线命名法(under_score_case，Snake蛇形)：C、Python变量、数据库命名常用</li><li>短横线命名法(kebab-case)：Web前端语言(如CSS)变量常用，HTML 特性是不区分大小写的，无法使用驼峰命名</li></ul><ul><li><a href="https://github.com/topics/naming" target="_blank" rel="noopener noreferrer">https://github.com/topics/naming</a></li><li><a href="https://github.com/unbug/codelf" target="_blank" rel="noopener noreferrer">https://github.com/unbug/codelf</a></li></ul><p><strong>Java</strong></p><ul><li><a href="https://www.oracle.com/cn/java/technologies/cc-java-programming-language.html" target="_blank" rel="noopener noreferrer">https://www.oracle.com/cn/java/technologies/cc-java-programming-language.html</a></li></ul><blockquote><p>大小写敏感的，且只能以 <code>字母</code>、<code>$</code>、<code>_</code> 开头，首字母随后的字符可以是<code>字母</code>、<code>数字</code>、<code>$</code>、<code>_</code></p></blockquote><ul><li>项目名：全部小写，可使用<code>-</code>或<code>_</code>连接符以分割单词，且不能有空格、中文和其他特殊字符</li><li>包名：全部小写，单词不需分割，且不能有空格、中文和其他特殊字符</li><li>常量：全部大写，可使用<code>_</code>连接符以分割单词</li><li>变量：小驼峰式命名法，前缀应当是名词。尽量在变量名字中体现所属类型，如：length、count表示数字类型；name、title表示字符串类型</li><li>函数：小驼峰式命名法，前缀应当为动词。</li></ul><ul><li>代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。</li><li>代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。注意，即使纯拼音命名方式也要避免采用。</li><li>类名使用大驼峰风格，但以下情形例外：DO / BO / DTO / VO / AO / PO等。</li><li>方法名、参数名、成员变量、局部变量都统一使用小驼峰风格，必须遵从小驼峰形式。</li><li>常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。</li><li>抽象类命名使用Abstract或Base开头。</li><li>异常类命名使用Exception结尾。</li><li>测试类命名以它要测试的类名开始，以Test结尾。</li><li>类型与中括号紧挨相连来定义数组。</li><li>POJO类中布尔类型的变量，都不要加is前缀，否则部分框架解析会引起序列化错误。</li><li>包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。</li><li>杜绝完全不规范的缩写，避免望文不知义。</li><li>最好逐一声明每个变量而不是写在一行。</li><li>Java的变量声明尽量靠近变量第一次使用的地方。</li></ul><ul><li><a href="https://www.cnblogs.com/caixueliang/p/7469638.html" target="_blank" rel="noopener noreferrer">Java开发相关命名规范</a></li><li><a href="https://www.cnblogs.com/liqiangchn/p/12000361.html" target="_blank" rel="noopener noreferrer">史上最全的Java命名规范参考</a></li></ul><h3 id="golang" tabindex="-1"><a class="header-anchor" href="#golang"><span>Golang</span></a></h3><ul><li><a href="https://golang.google.cn/ref/spec" target="_blank" rel="noopener noreferrer">https://golang.google.cn/ref/spec</a></li><li><a href="https://golang.google.cn/doc/effective_go" target="_blank" rel="noopener noreferrer">https://golang.google.cn/doc/effective_go</a></li></ul><blockquote><p>可见性（访问控制）取决于其第一个字符是否为大写</p></blockquote><ul><li>包名称：其他字母应该为小写单词，不要使用下划线或者混合大小写</li><li>文件命名：尽量采取有意义的文件名，简短，有意义，应该为小写单词，使用下划线分隔各个单词</li><li>结构体、接口、变量：使用驼峰命名法</li><li>常量：全部大写字母组成，并使用下划线分词</li><li>单元测试：文件名命名规范为<code>_test</code>结尾，测试用例的函数名称必须以<code>Test</code>开头</li></ul><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h3><ul><li>代码风格指南 <a href="https://www.python.org/dev/peps/pep-0008" target="_blank" rel="noopener noreferrer">https://www.python.org/dev/peps/pep-0008</a></li></ul><ul><li>文件名、包名、模块名、局部变量名、函数&amp;方法名：全小写+下划线式驼峰</li><li>类：首字母大写式驼峰。内部类可以使用额外的前导下划线</li><li>函数和方法的参数 <ul><li>类实例方法第一个参数使用self, 类方法第一个参数使用cls</li><li>如果一个函数的参数名称和保留的关键字冲突，通常使用一个后缀下划线好于使用缩写或奇怪的拼写</li></ul></li><li>全局变量 <ul><li>对于from M import *导入语句，如果想阻止导入模块内的全局变量可以使用旧有的规范，在全局变量上加一个前导的下划线。</li><li>全大写+下划线式驼峰，应避免使用全局变量</li></ul></li><li>变量 <ul><li>不论是类成员变量还是全局变量，均不使用 m 或 g 前缀。</li><li>私有类成员使用单一下划线前缀标识，多定义公开成员，少定义私有成员。</li><li>变量名不应带有类型信息，因为Python是动态类型语言，在解释的时候才确定类型</li></ul></li><li>常量 <ul><li>所有字母大写，由下划线连接各个单词</li></ul></li><li>异常 <ul><li>因为异常也是一个类，所以遵守类的命名规则。此外，如果异常实际上指代一个错误的话，应该使用<code>Error</code>做后缀</li></ul></li><li>缩写命名应当尽量使用全拼写的单词，缩写的情况有如下两种： <ul><li>常用的缩写，如XML、ID等，在命名时也应只大写首字母，如XmlParser。</li><li>命名中含有长单词，对某个单词进行缩写。这时应使用约定成俗的缩写方式。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>function 缩写为 fn</span></span>
<span class="line"><span>text 缩写为 txt</span></span>
<span class="line"><span>object 缩写为 obj</span></span>
<span class="line"><span>count 缩写为 cnt</span></span>
<span class="line"><span>number 缩写为 num</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>关于下划线</strong></p><ul><li>一个前导下划线：表示私有。</li><li>一个后缀下划线：避免关键字冲突。</li><li>以单下划线开头，是弱内部使用标识，from M import * 时，将不会导入该对象（python 一切皆对象）。</li><li>两个前导下划线：当命名一个类属性引起名称冲突时使用。</li><li>两个前导和后缀下划线：有特殊用途的对象或者属性，例如init或者file。绝对不要创造这样的名字，而只是使用它们。</li><li>以双下划线开头的变量名，主要用于类内部标识类私有，不能直接访问。</li><li>双下划线开头且双下划线截尾的命名方法尽量不要用，这是标识</li></ul><h2 id="gnu风格版本规则" tabindex="-1"><a class="header-anchor" href="#gnu风格版本规则"><span>GNU风格版本规则</span></a></h2><ul><li>语义化版本 <a href="https://github.com/semver/semver" target="_blank" rel="noopener noreferrer">https://github.com/semver/semver</a><ul><li><a href="https://semver.org/lang/zh-CN" target="_blank" rel="noopener noreferrer">https://semver.org/lang/zh-CN</a></li><li><a href="https://github.com/vdurmont/semver4j" target="_blank" rel="noopener noreferrer">https://github.com/vdurmont/semver4j</a></li><li><a href="https://github.com/semantic-release" target="_blank" rel="noopener noreferrer">https://github.com/semantic-release</a></li></ul></li></ul><ul><li><code>MAJOR.MINOR.PATCH</code>即： <code>主版本号.次版本号.修正版本号</code></li><li><code>Major.Minor.Revision</code>即： <code>主版本号.次版本号.修正版本号</code></li></ul><ol><li><p><code>Major</code> 主版本号：表示当前APR的主版本号，它的变化通常意味着APR的巨大的变化，比如体系结构的重新设计、API的重新设计、 重大的重构、重大的<code>feature</code>改动、重大的不兼容性的变化等等，而且这种变化通常会导致APR版本的向前不兼容。</p></li><li><p><code>Minor</code> 次版本号：发布较大的新<code>feature</code>功能，或者较大的重构或者模块变化，或者出现不兼容性改动，会增加子版本号； 子版本的发布会伴随着完整的<code>change log</code>，算是一个较大的版本发布，有仪式感</p></li><li><p><code>Revision</code>/<code>PATCH</code> 修正版本号：往往是<code>bug fix</code>，或者增加较小的<code>feature</code>，较小的功能改进或者模块变化， 在保证完整向后兼容的前提下，会增加修正版本号</p></li><li><p>当主版本号增加时，子版本号及修正版本号置<code>0</code></p></li><li><p>当子版本号增加时，修正版本号置<code>0</code></p></li></ol><p><strong>按照测试过程标识</strong></p><ol><li><code>Alpha</code>版：预览版或内部测试版，一般不向外部发布，会有很多Bug。</li><li><code>Beta</code>版：公测版。</li><li><code>RC</code>版：<code>Release Candidate</code>候选版本。也叫做<code>Gamma</code>版本。</li></ol><h2 id="commit提交规范" tabindex="-1"><a class="header-anchor" href="#commit提交规范"><span>Commit提交规范</span></a></h2><ul><li><a href="https://docs.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword" target="_blank" rel="noopener noreferrer">linking-a-pull-request-to-an-issue-using-a-keyword</a></li><li><a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines" target="_blank" rel="noopener noreferrer">angular.js-git-commit-guidelines</a></li><li><a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y" target="_blank" rel="noopener noreferrer">AngularJS Git Commit Message Conventions</a></li><li><a href="https://www.jianshu.com/p/6eafeb9b1edb" target="_blank" rel="noopener noreferrer">关于git提交规范</a></li><li><a href="https://github.com/woai3c/Front-end-articles/blob/master/git%20commit%20style.md" target="_blank" rel="noopener noreferrer">git commit 提交规范</a></li><li><a href="https://github.com/commitizen" target="_blank" rel="noopener noreferrer">https://github.com/commitizen</a></li></ul><ul><li>bugfix/fix/fixed: 表示修复 bug</li><li>feature: 表示增加新功能</li><li>add: 表示增加类、文件、代码块等</li><li>delete/del: 表示删除类、文件、代码块等</li><li>update: 表示对代码块、功能的更新</li><li>refactor: 表示对代码块、功能重构（即不是新增功能，也不是修改bug的代码变动）</li><li>arch: 表示输出中间版本，用于测试等</li><li>release to v1.0.0: 表示打包输出的版本号</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><ul><li>mod 修改</li><li>changed ( 完成的任务 )</li><li>rem:移除（Remove,移除功能）</li><li>feat：新功能（feature）</li><li>docs：文档（documentation）</li><li>style：格式（不影响代码运行的变动）</li></ul><h2 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>switch</span></a></h2><ul><li>在Python中没有<code>switch</code>语法</li><li>JavaScript的<code>switch</code>语法跟Java一样</li><li>在Java中</li></ul><blockquote><p>如果<code>default</code>不是<code>switch</code>代码块中最后一个<code>case</code>，请记得用<code>break;</code>结束默认<code>case</code>。</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">switch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toLowerCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;a&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 注意：此处如果条件满足但没有添加break，则代码会继续执行，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 会无条件执行后面的语句，直到遇到break</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    //break;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // fall thorugh</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;b&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">default:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 如果default写在最前面，会先执行，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // 但是如果没有写break;还是会无条件执行后面的语句</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;default&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在Go中</li></ul><ol><li>左花括号<code>{</code>必须与<code>switch</code>处于同一行；</li><li>条件表达式不限制为常量或者整数；</li><li>单个<code>case</code>中，可以出现多个结果选项，以<code>,</code>分割；</li><li>与C语言等规则相反，Go语言不需要用<code>break</code>来明确退出一个<code>case</code>；</li><li>只有在<code>case</code>中明确添加<code>fallthrough</code>关键字，才会继续执行紧跟的下一个<code>case</code>；</li><li>可以不设定<code>switch</code>之后的条件表达式，在此种情况下，整个<code>switch</code>结构与多个<code>if...else...</code>的逻辑作用等同。</li></ol><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">switch</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> strings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToLower</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;b&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;default&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,53))])}const m=s(g,[["render",u],["__file","编程规范.html.vue"]]),y=JSON.parse('{"path":"/PL/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83.html","title":"编程规范","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Flag","slug":"flag","link":"#flag","children":[]},{"level":2,"title":"代码风格指南","slug":"代码风格指南","link":"#代码风格指南","children":[{"level":3,"title":"命名规范","slug":"命名规范","link":"#命名规范","children":[]},{"level":3,"title":"Golang","slug":"golang","link":"#golang","children":[]},{"level":3,"title":"Python","slug":"python","link":"#python","children":[]}]},{"level":2,"title":"GNU风格版本规则","slug":"gnu风格版本规则","link":"#gnu风格版本规则","children":[]},{"level":2,"title":"Commit提交规范","slug":"commit提交规范","link":"#commit提交规范","children":[]},{"level":2,"title":"switch","slug":"switch","link":"#switch","children":[]}],"git":{"createdTime":1726030162000,"updatedTime":1726030162000,"contributors":[{"name":"onni-top","email":"admin@onni.top","commits":1}]},"readingTime":{"minutes":11.89,"words":3568},"filePathRelative":"PL/编程规范.md","localizedDate":"2024年9月11日","excerpt":"\\n\\n<h2>Flag</h2>\\n<ul>\\n<li><a href=\\"https://github.com/topics/styleguide\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/topics/styleguide</a></li>\\n<li>十二要素 <a href=\\"https://github.com/heroku/12factor\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/heroku/12factor</a></li>\\n<li>敏捷宣言 <a href=\\"https://agilemanifesto.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://agilemanifesto.org</a></li>\\n<li>贡献者契约 <a href=\\"https://github.com/EthicalSource\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/EthicalSource</a>\\n<ul>\\n<li><a href=\\"https://www.contributor-covenant.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.contributor-covenant.org</a></li>\\n</ul>\\n</li>\\n<li>License <a href=\\"https://en.wikipedia.org/wiki/Software_license\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://en.wikipedia.org/wiki/Software_license</a></li>\\n<li><a href=\\"https://github.com/fossas\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/fossas</a>\\n<ul>\\n<li><a href=\\"https://app.fossa.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://app.fossa.com</a></li>\\n<li><a href=\\"https://fossa.com/learn/developers-guide-open-source-software-licenses\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://fossa.com/learn/developers-guide-open-source-software-licenses</a></li>\\n<li><a href=\\"http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何选择开源许可证？</a></li>\\n<li><a href=\\"https://blog.csdn.net/wadefelix/article/details/6384317\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">如何选择开源许可证？</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://spdx.org/licenses\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://spdx.org/licenses</a></li>\\n<li><a href=\\"https://opensource.org/licenses\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://opensource.org/licenses</a></li>\\n<li>开源指南 <a href=\\"https://github.com/github/opensource.guide\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/github/opensource.guide</a></li>\\n<li><a href=\\"https://creativecommons.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://creativecommons.org</a></li>\\n</ul>"}');export{m as comp,y as data};
