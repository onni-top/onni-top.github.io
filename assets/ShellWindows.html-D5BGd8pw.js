import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,c as d,b as o,d as i,w as t,a as n,o as h,e as r}from"./app--VhlLr_b.js";const p="/images/MinGW-w64%E4%B8%8B%E8%BD%BD%E9%A1%B5%E8%AF%B4%E6%98%8E.png",g={},u={class:"table-of-contents"};function m(b,e){const l=s("router-link"),a=s("RouteLink");return h(),d("div",null,[e[9]||(e[9]=o("h1",{id:"shellwindows",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#shellwindows"},[o("span",null,"ShellWindows")])],-1)),o("nav",u,[o("ul",null,[o("li",null,[i(l,{to:"#flag"},{default:t(()=>e[0]||(e[0]=[r("Flag")])),_:1})]),o("li",null,[i(l,{to:"#第三方工具"},{default:t(()=>e[1]||(e[1]=[r("第三方工具")])),_:1})]),o("li",null,[i(l,{to:"#wsl"},{default:t(()=>e[2]||(e[2]=[r("WSL")])),_:1})]),o("li",null,[i(l,{to:"#mingw-w64"},{default:t(()=>e[3]||(e[3]=[r("MinGW-w64")])),_:1}),o("ul",null,[o("li",null,[i(l,{to:"#mingw-w64下载"},{default:t(()=>e[4]||(e[4]=[r("MinGW-w64下载")])),_:1})]),o("li",null,[i(l,{to:"#mingw-w64安装"},{default:t(()=>e[5]||(e[5]=[r("MinGW-w64安装")])),_:1})])])]),o("li",null,[i(l,{to:"#msys2"},{default:t(()=>e[6]||(e[6]=[r("MSYS2")])),_:1}),o("ul",null,[o("li",null,[i(l,{to:"#msys2命令"},{default:t(()=>e[7]||(e[7]=[r("MSYS2命令")])),_:1})])])])])]),e[10]||(e[10]=n('<h2 id="flag" tabindex="-1"><a class="header-anchor" href="#flag"><span>Flag</span></a></h2><ul><li><a href="https://github.com/topics/cygwin" target="_blank" rel="noopener noreferrer">https://github.com/topics/cygwin</a></li><li><a href="http://www.cygwin.com" target="_blank" rel="noopener noreferrer">http://www.cygwin.com</a><ul><li><a href="https://silaoa.github.io/tags/Cygwin" target="_blank" rel="noopener noreferrer">Cygwin | silaoA的博客</a></li></ul></li><li><a href="https://sourceware.org" target="_blank" rel="noopener noreferrer">https://sourceware.org</a></li></ul><ul><li><a href="https://github.com/OpenPGP/openpgp.org" target="_blank" rel="noopener noreferrer">https://github.com/OpenPGP/openpgp.org</a></li><li>GPG密钥 <a href="https://www.gpg4win.org" target="_blank" rel="noopener noreferrer">https://www.gpg4win.org</a></li><li>多个shell软件包镜像 <a href="https://github.com/mirror" target="_blank" rel="noopener noreferrer">https://github.com/mirror</a></li><li><a href="https://github.com/svn2github" target="_blank" rel="noopener noreferrer">https://github.com/svn2github</a></li><li><a href="https://winlibs.com" target="_blank" rel="noopener noreferrer">https://winlibs.com</a></li><li>沙箱 <a href="https://github.com/sandboxie-plus" target="_blank" rel="noopener noreferrer">https://github.com/sandboxie-plus</a></li></ul><h2 id="第三方工具" tabindex="-1"><a class="header-anchor" href="#第三方工具"><span>第三方工具</span></a></h2><ul><li>扫描任何32位或64位Windows模块（exe，dll，ocx，sys等）的函数 <a href="http://www.dependencywalker.com" target="_blank" rel="noopener noreferrer">http://www.dependencywalker.com</a></li><li>DLL导出查看器 <a href="http://www.nirsoft.net/utils/dll_export_viewer.html" target="_blank" rel="noopener noreferrer">http://www.nirsoft.net/utils/dll_export_viewer.html</a></li><li>RegDllView-查看系统上已注册的dll/ocx/exe文件，从资源管理器注册dll文件： <ul><li><a href="http://www.nirsoft.net/utils/registered_dll_view.html" target="_blank" rel="noopener noreferrer">http://www.nirsoft.net/utils/registered_dll_view.html</a></li></ul></li><li>Windows 10的system32目录中的所有DLL文件信息 <a href="http://windows10dll.nirsoft.net" target="_blank" rel="noopener noreferrer">http://windows10dll.nirsoft.net</a></li><li>下载– NTCore <a href="https://ntcore.com/?page_id=345" target="_blank" rel="noopener noreferrer">https://ntcore.com/?page_id=345</a></li><li>小型命令行实用程序 <a href="http://www.ltr-data.se/opencode.html/#CmdUtils" target="_blank" rel="noopener noreferrer">http://www.ltr-data.se/opencode.html/#CmdUtils</a></li><li>网络请求工具 <a href="https://eternallybored.org/misc/wget" target="_blank" rel="noopener noreferrer">https://eternallybored.org/misc/wget</a></li><li>窗口控制 <a href="https://github.com/ritchielawrence/cmdow" target="_blank" rel="noopener noreferrer">https://github.com/ritchielawrence/cmdow</a></li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659" target="_blank" rel="noopener noreferrer">日志分析工具Log Parser</a><ul><li><a href="https://blog.csdn.net/weixin_41073877/article/details/112917207" target="_blank" rel="noopener noreferrer">日志分析-LogParser使用方法</a></li></ul></li></ul><h2 id="wsl" tabindex="-1"><a class="header-anchor" href="#wsl"><span>WSL</span></a></h2><ul><li><a href="https://github.com/topics/wsl" target="_blank" rel="noopener noreferrer">https://github.com/topics/wsl</a></li><li><a href="https://github.com/topics/windows-subsystem" target="_blank" rel="noopener noreferrer">https://github.com/topics/windows-subsystem</a></li><li><a href="https://github.com/topics/windows-subsystem-linux" target="_blank" rel="noopener noreferrer">https://github.com/topics/windows-subsystem-linux</a></li><li><a href="https://github.com/topics/windows-subsystem-for-linux" target="_blank" rel="noopener noreferrer">https://github.com/topics/windows-subsystem-for-linux</a></li><li><a href="https://github.com/sirredbeard/Awesome-WSL" target="_blank" rel="noopener noreferrer">https://github.com/sirredbeard/Awesome-WSL</a></li></ul><ul><li><a href="https://github.com/microsoft/WSL" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL</a></li><li><a href="https://github.com/microsoft/wslg" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/wslg</a></li><li><a href="https://github.com/Microsoft/WSL-DistroLauncher" target="_blank" rel="noopener noreferrer">https://github.com/Microsoft/WSL-DistroLauncher</a></li><li><a href="https://github.com/microsoft/WSL2-Linux-Kernel" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL2-Linux-Kernel</a></li><li><a href="https://docs.microsoft.com/zh-cn/windows/wsl" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/windows/wsl</a><ul><li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#downloading-distributions" target="_blank" rel="noopener noreferrer">手动下载适用于 Linux 的 Windows 子系统发行版包</a></li></ul></li><li>性能评测 <a href="https://github.com/microsoft/Microsoft-Performance-Tools-Linux-Android" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/Microsoft-Performance-Tools-Linux-Android</a></li><li>WSA Tool <a href="https://github.com/weareblahs/WSAUtilities" target="_blank" rel="noopener noreferrer">https://github.com/weareblahs/WSAUtilities</a></li><li><a href="https://github.com/alesimula/wsa_pacman" target="_blank" rel="noopener noreferrer">https://github.com/alesimula/wsa_pacman</a></li><li><a href="https://github.com/voletro/wsa-toolbox" target="_blank" rel="noopener noreferrer">https://github.com/voletro/wsa-toolbox</a></li><li><a href="https://github.com/yuk7/ArchWSL" target="_blank" rel="noopener noreferrer">https://github.com/yuk7/ArchWSL</a><ul><li><a href="https://wsldl-pg.github.io/ArchW-docs/locale/zh-CN" target="_blank" rel="noopener noreferrer">https://wsldl-pg.github.io/ArchW-docs/locale/zh-CN</a></li></ul></li><li><a href="https://github.com/agowa338/WSL-DistroLauncher-Alpine" target="_blank" rel="noopener noreferrer">https://github.com/agowa338/WSL-DistroLauncher-Alpine</a></li><li><a href="https://github.com/topics/wsl-debian" target="_blank" rel="noopener noreferrer">https://github.com/topics/wsl-debian</a><ul><li><a href="https://blog.csdn.net/zongjinyun123/article/details/122778012" target="_blank" rel="noopener noreferrer">wsl2+Debian11+切换安装目录+换源基本设置</a></li><li><a href="https://www.debian.org/mirror/list" target="_blank" rel="noopener noreferrer">https://www.debian.org/mirror/list</a></li></ul></li><li><a href="https://zhuanlan.zhihu.com/p/151392411" target="_blank" rel="noopener noreferrer">关于使用WSL2出现“参考的对象类型不支持尝试的操作”的解决方法</a><ul><li><a href="https://github.com/microsoft/WSL/issues/4177" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL/issues/4177</a></li></ul></li><li><a href="https://github.com/shayne/go-wsl2-host" target="_blank" rel="noopener noreferrer">https://github.com/shayne/go-wsl2-host</a></li><li><a href="https://github.com/microsoft/WSL/issues/4210#issuecomment-648570493" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL/issues/4210#issuecomment-648570493</a></li><li><a href="https://github.com/MustardChef/WSABuilds" target="_blank" rel="noopener noreferrer">https://github.com/MustardChef/WSABuilds</a></li><li><a href="https://github.com/LSPosed/MagiskOnWSALocal" target="_blank" rel="noopener noreferrer">https://github.com/LSPosed/MagiskOnWSALocal</a></li></ul><ul><li><a href="https://docs.microsoft.com/zh-cn/virtualization" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/virtualization</a></li><li><a href="https://docs.microsoft.com/zh-cn/windows-server/virtualization" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/windows-server/virtualization</a></li><li><a href="https://github.com/nullpo-head/WSL-Hello-sudo" target="_blank" rel="noopener noreferrer">https://github.com/nullpo-head/WSL-Hello-sudo</a></li></ul><ul><li><a href="https://github.com/WSA-Community/WSAGAScript" target="_blank" rel="noopener noreferrer">https://github.com/WSA-Community/WSAGAScript</a></li><li><a href="https://github.com/opengapps/opengapps" target="_blank" rel="noopener noreferrer">https://github.com/opengapps/opengapps</a><ul><li><a href="https://sourceforge.net/projects/opengapps" target="_blank" rel="noopener noreferrer">https://sourceforge.net/projects/opengapps</a></li></ul></li></ul><p><strong><code>wsl --update</code>执行错误问题</strong></p><ul><li><code>C:\\Windows\\SoftwareDistribution\\Download</code> 下载的<code>wsl_update_x64.msi</code>文件缓存路径</li></ul><ul><li><a href="https://github.com/microsoft/WSL/issues/5014" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL/issues/5014</a></li><li><a href="https://github.com/microsoft/WSL/issues/5035" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL/issues/5035</a></li><li><a href="https://github.com/microsoft/WSL/issues/5642" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/WSL/issues/5642</a></li><li><a href="https://www.catalog.update.microsoft.com/Search.aspx?q=wsl" target="_blank" rel="noopener noreferrer">https://www.catalog.update.microsoft.com/Search.aspx?q=wsl</a></li><li><a href="https://blog.csdn.net/yihuajack/article/details/117469533" target="_blank" rel="noopener noreferrer">Windows Subsystem for Linux Update错误0x80070643的真正解决方法</a></li></ul><blockquote><p>自动内核更新，请启用 Windows 更新设置: <code>设置</code> -&gt; <code>更新和安全</code> -&gt; <code>高级选项</code> -&gt; <code>在更新 Windows 时接收其他 Microsoft 产品的更新</code></p></blockquote><blockquote><p><code>netsh winsock reset</code>解决<code>Error code: Wsl/Service/0x800706f7</code>错误</p></blockquote><p><strong>设置默认root用户登录</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ubuntu2004.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --default-user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',17)),o("p",null,[o("strong",null,[i(a,{to:"/System/Linux%E9%85%8D%E7%BD%AE.html#%E4%BF%AE%E6%94%B9%E4%B8%BAroot%E7%99%BB%E5%BD%95"},{default:t(()=>e[8]||(e[8]=[r("修改为root登录")])),_:1})])]),e[11]||(e[11]=n(`<p><strong>安装SSH远程连接</strong></p><blockquote><p>WSL 子系统自带的ssh服务无法连接，需卸载后重新安装</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> purge</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssh-server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssh-server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssh-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="https://www.cnblogs.com/hieroglyphs/p/16407054.html" target="_blank" rel="noopener noreferrer">xshell连接wsl</a></li></ul><p><strong>设置开机自启</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/init.wsl</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#添加service ssh start设置ssh服务开机自启</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mingw-w64" tabindex="-1"><a class="header-anchor" href="#mingw-w64"><span>MinGW-w64</span></a></h2><blockquote><p><code>MinGW</code>的全称是：<code>Minimalist GNU on Windows</code> 。它实际上是将经典的开源<code>C</code>语言编译器<code>GCC</code>移植到了<code>Windows</code>平台下， 并且包含了<code>Win32API</code>，因此可以将源代码编译为可在<code>Windows</code>中运行的可执行程序。 而且还可以使用一些<code>Windows</code>不具备的，<code>Linux</code>平台下的开发工具。一句话来概括：<code>MinGW</code>就是<code>GCC</code>的<code>Windows</code>版本 。</p></blockquote><blockquote><p><code>MinGW-w64</code>与<code>MinGW</code>的区别在于<code>MinGW</code>只能编译生成<code>32位</code>可执行程序，而<code>MinGW-w64</code>则可以编译生成<code>64位</code>或<code>32位</code>可执行程序。 正因为如此，<code>MinGW</code>现已被<code>MinGW-w64</code>所取代，且<code>MinGW</code>也早已停止了更新。</p></blockquote><blockquote><p><code>MinGW-w64</code>使用<code>Windows</code>的<code>C</code>语言运行库，因此编译出的程序不需要第三方<code>DLL</code>，可以直接在<code>Windows</code>下运行。</p></blockquote><blockquote><p>那些著名的开源<code>IDE</code>实际只是将<code>MinGW-w64</code>封装了起来，使它拥有友好的图形化界面，简化了操作，但内部核心仍然是<code>MinGW-w64</code>。</p></blockquote><ul><li><a href="https://zhuanlan.zhihu.com/p/57774611" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/57774611</a></li></ul><blockquote><p><code>MinGW</code>一个自由开源的最小开发工具集：<code>mingw-gcc</code>编译工具链、<code>mingw</code>软件包管理器（<code>mingw-get</code>），用于开发<code>Windows</code>原生程序。 第一版的<code>mingw-gcc</code>是利用早期的<code>Cygwin</code>套件编译而成，这个过程和<code>Cygwin</code>系列（二）：初窥<code>Cygwin</code>背后中<code>Cygwin DLL</code>构建类似， 随后<code>mingw-binutils</code>、<code>mingw-make</code>等其他工具链也都逐渐移植成功，<code>MinGW</code>逐渐完全脱离了<code>Cygwin</code>。</p></blockquote><blockquote><p><code>2005</code>年，<code>MinGW-w64</code>项目基于<code>MinGW</code>创建，改善了<code>MinGW</code>的相关缺陷，并既支持<code>32位</code>程序又支持<code>64位</code>程序。 <code>MinGW-w64</code>项目开发活跃，被很多<code>Linux</code>发行版采用为交叉工具链，而<code>MinGW</code>事实上已被抛弃。</p></blockquote><blockquote><p>可以把<code>MinGW</code>视为<code>MS Visual C++/Studio</code>的开源替代品</p></blockquote><ul><li><a href="https://github.com/topics/mingw" target="_blank" rel="noopener noreferrer">https://github.com/topics/mingw</a></li><li><a href="https://github.com/topics/mingw-w64" target="_blank" rel="noopener noreferrer">https://github.com/topics/mingw-w64</a></li><li><a href="https://github.com/topics/msvc" target="_blank" rel="noopener noreferrer">https://github.com/topics/msvc</a></li></ul><ul><li><a href="https://osdn.net/projects/mingw" target="_blank" rel="noopener noreferrer">https://osdn.net/projects/mingw</a></li><li><a href="http://mingw-w64.org" target="_blank" rel="noopener noreferrer">http://mingw-w64.org</a><ul><li><a href="https://github.com/mirror/mingw-w64" target="_blank" rel="noopener noreferrer">https://github.com/mirror/mingw-w64</a></li></ul></li><li>包管理 <a href="https://packages.msys2.org" target="_blank" rel="noopener noreferrer">https://packages.msys2.org</a></li><li><a href="https://gstreamer.freedesktop.org/data/pkg/windows" target="_blank" rel="noopener noreferrer">https://gstreamer.freedesktop.org/data/pkg/windows</a></li></ul><h3 id="mingw-w64下载" tabindex="-1"><a class="header-anchor" href="#mingw-w64下载"><span>MinGW-w64下载</span></a></h3><ul><li><a href="https://sourceforge.net/projects/mingw-w64" target="_blank" rel="noopener noreferrer">https://sourceforge.net/projects/mingw-w64</a><ul><li><a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/#readme" target="_blank" rel="noopener noreferrer">mingw-w64-release</a></li></ul></li><li><a href="https://github.com/HyperSine/mingw-w64-build" target="_blank" rel="noopener noreferrer">https://github.com/HyperSine/mingw-w64-build</a></li></ul><blockquote><p>首先看到的是源码，要把页面滚动到最底部才能看到编译好的在线安装程序和离线压缩包</p></blockquote><blockquote><p>推荐离线安装，在线安装其实也是下载压缩包，而且众所周知的原因，国内通过在线安装非常缓慢</p></blockquote><p><img src="`+p+`" alt=""></p><p><strong>环境说明</strong></p><ul><li><a href="https://blog.csdn.net/wf19930209/article/details/79536506" target="_blank" rel="noopener noreferrer">X86和X86_64和AMD64的由来</a></li></ul><ul><li>系统架构 <ul><li><code>x86_64</code>为<code>64位</code>操作系统</li><li><code>i686</code>为<code>32位</code>操作系统</li></ul></li><li>操作系统接口协议（为哪种操作系统开发程序） <ul><li><code>posix</code>为<code>Linux</code>、<code>Unix</code>、<code>Mac OS</code>等其他操作系统</li><li><code>win32</code>为<code>Windows</code>操作系统</li></ul></li><li>异常处理模型（64位） <ul><li><code>seh</code>是新发明的，性能比较好，但不支持<code>32位</code>操作系统</li><li><code>sjlj</code>是古老的，稳定性好，支持<code>32位</code>操作系统</li></ul></li><li>异常处理模型（32位） <ul><li><code>dwarf</code>性能要优于<code>sjlj</code>，不支持<code>64位</code>操作系统</li><li><code>sjlj</code>稳定性好，支持<code>32位</code>操作系统</li></ul></li></ul><h3 id="mingw-w64安装" tabindex="-1"><a class="header-anchor" href="#mingw-w64安装"><span>MinGW-w64安装</span></a></h3><ol><li>如操作系统是<code>Windows10-X64</code>并为<code>posix</code>接口协议开发程序，则选择：<code>x86_64-posix-seh</code></li><li>下载后把压缩包解压到指定盘符下，再添加到系统环境变量<code>path</code></li></ol><ul><li>如解压目录<code>C:\\Program Files\\mingw64</code>，则在CMD执行</li></ul><div class="language-batch line-numbers-mode" data-highlighter="shiki" data-ext="batch" data-title="batch" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">setx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /m </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">Path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PATH</span><span style="--shiki-light:#50A14F;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">;C:\\Program Files\\mingw64\\bin&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">:: 查看添加变量是否成功</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %PATH%</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查看版本</strong></p><div class="language-batch line-numbers-mode" data-highlighter="shiki" data-ext="batch" data-title="batch" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">gcc -v &amp;&amp; g++ -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="msys2" tabindex="-1"><a class="header-anchor" href="#msys2"><span>MSYS2</span></a></h2><blockquote><p><code>MSYS</code>是用于辅助<code>Windows</code>版<code>MinGW</code>进行命令行开发的配套软件包，提供了部分<code>Unix</code>工具以使得<code>MinGW</code>的工具使用起来方便一些。 如果不喜欢庞大的<code>Cygwin</code>，而且使用不多，可以试试。不过喜欢完整体验、不在乎磁盘占用等等，还是推荐<code>Cygwin</code>而不是<code>MSYS</code>。</p></blockquote><blockquote><p><code>MSYS</code>和<code>MinGW</code>两者有较大的独立性。<code>MSYS</code>是<code>Minimal SYStem</code>的缩写，是一个基于<code>Bourne Shell</code>的命令行系统， 用于替代<code>Windows</code>中的<code>cmd.exe</code>，提供一个像<code>Linux/UNIX</code>的命令行环境。</p></blockquote><blockquote><p><code>MSYS</code>是基于<code>Cygwin</code>早期版本（<code>v1.3</code>）发展而来，包含了少部分<code>Linux/UNIX</code>程序，没有编译工具链， 而且与<code>Linux/UNIX</code>原生程序或<code>Cygwin</code>程序相较丢失了很多功能特性，运行依赖于<code>POSIX</code>兼容层（<code>msys-1.0.dll</code>）。</p></blockquote><blockquote><p>如果没有<code>MSYS</code>，在<code>cmd</code>中也可以正常运行<code>MinGW</code>程序，但<code>MinGW</code>和<code>MSYS</code>配合起来， 就组成了一个类似<code>Linux/UNIX</code>的、包含常用程序和完整开发工具的轻量但完备的系统环境， <code>MinGW</code>的安装路径可以挂载到<code>MSYS</code>目录树中任何位置。</p></blockquote><blockquote><p><code>MSYS</code>项目仅支持<code>32位</code>程序，项目本身也发展缓慢。<code>MSYS2</code>基于最新版的<code>Cygwin</code>而创建，完全独立于<code>MSYS</code>而重写的版本 ，并既支持<code>32位</code>程序又支持<code>64位</code>程序，<code>POSIX</code>兼容层为<code>msys-2.0.dll</code>。 <code>MSYS2</code>由<code>msys2</code>、<code>mingw32</code>、<code>mingw64</code>三个子系统组成，<code>mingw32</code>、<code>mingw64</code>对应于<code>mingw-w64</code>的<code>32位</code>和<code>64位</code>版本。 还有一个特色就是，<code>MSYS2</code>移植了<code>Arch Linux</code>中的包管理器<code>pacman</code></p></blockquote><blockquote><p><code>MSYS2</code>不完全是基于<code>MinGW</code>的，至少其原生工具都是链接到自带的一套特定版本的<code>Cygwin DLL</code>的。 基本上只是用<code>libalpm</code>管理<code>MSYS2</code>、<code>MinGW-w64</code>和<code>MinGW</code>三个不同子系统的软件包</p></blockquote><ul><li><a href="https://github.com/topics/msys2" target="_blank" rel="noopener noreferrer">https://github.com/topics/msys2</a></li></ul><ul><li><a href="https://github.com/msys2" target="_blank" rel="noopener noreferrer">https://github.com/msys2</a><ul><li><a href="http://www.msys2.org" target="_blank" rel="noopener noreferrer">http://www.msys2.org</a></li></ul></li><li><a href="https://www.jianshu.com/p/c740b71e7775" target="_blank" rel="noopener noreferrer">msys2配置记录</a></li><li><a href="https://mirror.tuna.tsinghua.edu.cn/help/msys2" target="_blank" rel="noopener noreferrer">清华大学MSYS2镜像</a></li><li><a href="http://mirrors.ustc.edu.cn/help/msys2.html" target="_blank" rel="noopener noreferrer">中国科学技术大学MSYS2镜像</a></li></ul><h3 id="msys2命令" tabindex="-1"><a class="header-anchor" href="#msys2命令"><span>MSYS2命令</span></a></h3><ul><li><code>pacman -S &lt;packge-name&gt;</code> 安装软件 <ul><li><code>pacman -S mingw-w64-x86_64-make mingw-w64-x86_64-gcc</code></li></ul></li><li><code>pacman -U &lt;gz-file&gt;</code> 安装本地包，其扩展名为<code>pkg.tar.gz</code></li><li><code>pacman -Syu</code> 同步<code>Msys2</code>源，并更新</li><li><code>pacman -Sy</code> 仅同步源</li><li><code>pacman -Su</code> 更新系统</li><li><code>pacman -Sy &lt;packge-name&gt;</code> 同步源后再安装软件</li><li><code>pacman -R &lt;packge-name&gt;</code> 该命令将只删除包，不包含该包的依赖。</li><li><code>pacman -Rs &lt;packge-name&gt;</code> 在删除包的同时，也将删除其依赖。</li><li><code>pacman -Rd &lt;packge-name&gt;</code> 在删除包时不检查依赖。</li><li><code>pacman -Ss &lt;keywords&gt;</code> 这将搜索含关键字的包。</li><li><code>pacman -Qi &lt;packge-name&gt;</code> 查看有关包的信息。</li></ul>`,42))])}const f=c(g,[["render",m],["__file","ShellWindows.html.vue"]]),y=JSON.parse('{"path":"/Shell/ShellWindows.html","title":"ShellWindows","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Flag","slug":"flag","link":"#flag","children":[]},{"level":2,"title":"第三方工具","slug":"第三方工具","link":"#第三方工具","children":[]},{"level":2,"title":"WSL","slug":"wsl","link":"#wsl","children":[]},{"level":2,"title":"MinGW-w64","slug":"mingw-w64","link":"#mingw-w64","children":[{"level":3,"title":"MinGW-w64下载","slug":"mingw-w64下载","link":"#mingw-w64下载","children":[]},{"level":3,"title":"MinGW-w64安装","slug":"mingw-w64安装","link":"#mingw-w64安装","children":[]}]},{"level":2,"title":"MSYS2","slug":"msys2","link":"#msys2","children":[{"level":3,"title":"MSYS2命令","slug":"msys2命令","link":"#msys2命令","children":[]}]}],"git":{"createdTime":1726030162000,"updatedTime":1726030162000,"contributors":[{"name":"onni-top","email":"admin@onni.top","commits":1}]},"readingTime":{"minutes":7.35,"words":2205},"filePathRelative":"Shell/ShellWindows.md","localizedDate":"2024年9月11日","excerpt":"\\n\\n<h2>Flag</h2>\\n<ul>\\n<li><a href=\\"https://github.com/topics/cygwin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/topics/cygwin</a></li>\\n<li><a href=\\"http://www.cygwin.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.cygwin.com</a>\\n<ul>\\n<li><a href=\\"https://silaoa.github.io/tags/Cygwin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Cygwin | silaoA的博客</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"https://sourceware.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://sourceware.org</a></li>\\n</ul>"}');export{f as comp,y as data};
